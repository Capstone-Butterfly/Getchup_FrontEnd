{"ast":null,"code":"const $148a7a147e38ea7f$var$RTL_SCRIPTS = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nconst $148a7a147e38ea7f$var$RTL_LANGS = new Set(['ae', 'ar', 'arc', 'bcc', 'bqi', 'ckb', 'dv', 'fa', 'glk', 'he', 'ku', 'mzn', 'nqo', 'pnb', 'ps', 'sd', 'ug', 'ur', 'yi']);\nfunction $148a7a147e38ea7f$export$702d680b21cbd764(localeString) {\n  if (Intl.Locale) {\n    let locale = new Intl.Locale(localeString).maximize();\n    let textInfo = typeof locale.getTextInfo === 'function' ? locale.getTextInfo() : locale.textInfo;\n    if (textInfo) return textInfo.direction === 'rtl';\n    if (locale.script) return $148a7a147e38ea7f$var$RTL_SCRIPTS.has(locale.script);\n  }\n  let lang = localeString.split('-')[0];\n  return $148a7a147e38ea7f$var$RTL_LANGS.has(lang);\n}\nexport { $148a7a147e38ea7f$export$702d680b21cbd764 as isRTL };","map":{"version":3,"names":["$148a7a147e38ea7f$var$RTL_SCRIPTS","Set","$148a7a147e38ea7f$var$RTL_LANGS","$148a7a147e38ea7f$export$702d680b21cbd764","localeString","Intl","Locale","locale","maximize","textInfo","getTextInfo","direction","script","has","lang","split"],"sources":["/Users/farhang/Desktop/June 17 /Front/Getchup_FrontEnd/node_modules/@react-aria/i18n/dist/packages/@react-aria/i18n/src/utils.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// https://en.wikipedia.org/wiki/Right-to-left\nconst RTL_SCRIPTS = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nconst RTL_LANGS = new Set(['ae', 'ar', 'arc', 'bcc', 'bqi', 'ckb', 'dv', 'fa', 'glk', 'he', 'ku', 'mzn', 'nqo', 'pnb', 'ps', 'sd', 'ug', 'ur', 'yi']);\n\n/**\n * Determines if a locale is read right to left using [Intl.Locale]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale}.\n */\nexport function isRTL(localeString: string) {\n  // If the Intl.Locale API is available, use it to get the locale's text direction.\n  // @ts-ignore\n  if (Intl.Locale) {\n    let locale = new Intl.Locale(localeString).maximize();\n\n    // Use the text info object to get the direction if possible.\n    // @ts-ignore - this was implemented as a property by some browsers before it was standardized as a function.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/getTextInfo\n    let textInfo = typeof locale.getTextInfo === 'function' ? locale.getTextInfo() : locale.textInfo;\n    if (textInfo) {\n      return textInfo.direction === 'rtl';\n    }\n\n    // Fallback: guess using the script.\n    // This is more accurate than guessing by language, since languages can be written in multiple scripts.\n    if (locale.script) {\n      return RTL_SCRIPTS.has(locale.script);\n    }\n  }\n\n  // If not, just guess by the language (first part of the locale)\n  let lang = localeString.split('-')[0];\n  return RTL_LANGS.has(lang);\n}\n"],"mappings":"AAaA,MAAMA,iCAAA,GAAc,IAAIC,GAAA,CAAI,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAO;AAC5G,MAAMC,+BAAA,GAAY,IAAID,GAAA,CAAI,CAAC,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,KAAK;AAK7I,SAASE,0CAAMC,YAAoB;EAGxC,IAAIC,IAAA,CAAKC,MAAM,EAAE;IACf,IAAIC,MAAA,GAAS,IAAIF,IAAA,CAAKC,MAAM,CAACF,YAAA,EAAcI,QAAQ;IAKnD,IAAIC,QAAA,GAAW,OAAOF,MAAA,CAAOG,WAAW,KAAK,aAAaH,MAAA,CAAOG,WAAW,KAAKH,MAAA,CAAOE,QAAQ;IAChG,IAAIA,QAAA,EACF,OAAOA,QAAA,CAASE,SAAS,KAAK;IAKhC,IAAIJ,MAAA,CAAOK,MAAM,EACf,OAAOZ,iCAAA,CAAYa,GAAG,CAACN,MAAA,CAAOK,MAAM;EAExC;EAGA,IAAIE,IAAA,GAAOV,YAAA,CAAaW,KAAK,CAAC,IAAI,CAAC,EAAE;EACrC,OAAOb,+BAAA,CAAUW,GAAG,CAACC,IAAA;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}