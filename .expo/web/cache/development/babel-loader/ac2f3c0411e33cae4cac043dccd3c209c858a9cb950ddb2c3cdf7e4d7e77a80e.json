{"ast":null,"code":"import { useEffect as $dRVb8$useEffect } from \"react\";\nconst $dd149f63282afbbf$export$f6211563215e3b37 = new WeakMap();\nfunction $dd149f63282afbbf$export$18fc8428861184da(opts) {\n  let {\n    triggerRef: triggerRef,\n    isOpen: isOpen,\n    onClose: onClose\n  } = opts;\n  (0, $dRVb8$useEffect)(() => {\n    if (!isOpen || onClose === null) return;\n    let onScroll = e => {\n      let target = e.target;\n      if (!triggerRef.current || target instanceof Node && !target.contains(triggerRef.current)) return;\n      let onCloseHandler = onClose || $dd149f63282afbbf$export$f6211563215e3b37.get(triggerRef.current);\n      if (onCloseHandler) onCloseHandler();\n    };\n    window.addEventListener('scroll', onScroll, true);\n    return () => {\n      window.removeEventListener('scroll', onScroll, true);\n    };\n  }, [isOpen, onClose, triggerRef]);\n}\nexport { $dd149f63282afbbf$export$f6211563215e3b37 as onCloseMap, $dd149f63282afbbf$export$18fc8428861184da as useCloseOnScroll };","map":{"version":3,"names":["$dd149f63282afbbf$export$f6211563215e3b37","WeakMap","$dd149f63282afbbf$export$18fc8428861184da","opts","triggerRef","isOpen","onClose","$dRVb8$useEffect","onScroll","e","target","current","Node","contains","onCloseHandler","get","window","addEventListener","removeEventListener"],"sources":["/Users/farhang/Desktop/June 17 /Front/Getchup_FrontEnd/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/src/useCloseOnScroll.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useEffect} from 'react';\n\n// This behavior moved from useOverlayTrigger to useOverlayPosition.\n// For backward compatibility, where useOverlayTrigger handled hiding the popover on close,\n// it sets a close function here mapped from the trigger element. This way we can avoid\n// forcing users to pass an onClose function to useOverlayPosition which could be considered\n// a breaking change.\nexport const onCloseMap: WeakMap<Element, () => void> = new WeakMap();\n\ninterface CloseOnScrollOptions {\n  triggerRef: RefObject<Element>,\n  isOpen?: boolean,\n  onClose?: () => void\n}\n\n/** @private */\nexport function useCloseOnScroll(opts: CloseOnScrollOptions) {\n  let {triggerRef, isOpen, onClose} = opts;\n\n  useEffect(() => {\n    if (!isOpen || onClose === null) {\n      return;\n    }\n\n    let onScroll = (e: MouseEvent) => {\n      // Ignore if scrolling an scrollable region outside the trigger's tree.\n      let target = e.target;\n      // window is not a Node and doesn't have contain, but window contains everything\n      if (!triggerRef.current || ((target instanceof Node) && !target.contains(triggerRef.current))) {\n        return;\n      }\n\n      let onCloseHandler = onClose || onCloseMap.get(triggerRef.current);\n      if (onCloseHandler) {\n        onCloseHandler();\n      }\n    };\n\n    window.addEventListener('scroll', onScroll, true);\n    return () => {\n      window.removeEventListener('scroll', onScroll, true);\n    };\n  }, [isOpen, onClose, triggerRef]);\n}\n"],"mappings":";AAmBO,MAAMA,yCAAA,GAA2C,IAAIC,OAAA;AASrD,SAASC,0CAAiBC,IAA0B;EACzD,IAAI;IAAAC,UAAA,EAACA,UAAU;IAAAC,MAAA,EAAEA,MAAM;IAAAC,OAAA,EAAEA;EAAO,CAAC,GAAGH,IAAA;EAEpC,IAAAI,gBAAQ,EAAE;IACR,IAAI,CAACF,MAAA,IAAUC,OAAA,KAAY,MACzB;IAGF,IAAIE,QAAA,GAAYC,CAAA;MAEd,IAAIC,MAAA,GAASD,CAAA,CAAEC,MAAM;MAErB,IAAI,CAACN,UAAA,CAAWO,OAAO,IAAKD,MAAC,YAAkBE,IAAA,IAAS,CAACF,MAAA,CAAOG,QAAQ,CAACT,UAAA,CAAWO,OAAO,GACzF;MAGF,IAAIG,cAAA,GAAiBR,OAAA,IAAWN,yCAAA,CAAWe,GAAG,CAACX,UAAA,CAAWO,OAAO;MACjE,IAAIG,cAAA,EACFA,cAAA;IAEJ;IAEAE,MAAA,CAAOC,gBAAgB,CAAC,UAAUT,QAAA,EAAU;IAC5C,OAAO;MACLQ,MAAA,CAAOE,mBAAmB,CAAC,UAAUV,QAAA,EAAU;IACjD;EACF,GAAG,CAACH,MAAA,EAAQC,OAAA,EAASF,UAAA,CAAW;AAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}