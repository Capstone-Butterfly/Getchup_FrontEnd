{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nconst Dummy = _ref => {\n  let {\n    children\n  } = _ref;\n  return React.createElement(React.Fragment, null, children);\n};\nexport const PanGestureHandler = Dummy;\nexport const GestureHandlerRootView = View;\nexport const GestureState = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5\n};","map":{"version":3,"names":["React","View","Dummy","_ref","children","createElement","Fragment","PanGestureHandler","GestureHandlerRootView","GestureState","UNDETERMINED","FAILED","BEGAN","CANCELLED","ACTIVE","END"],"sources":["/Users/farhang/Desktop/June 17 /Front/Getchup_FrontEnd/node_modules/@react-navigation/stack/src/views/GestureHandler.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\nimport type { PanGestureHandlerProperties } from 'react-native-gesture-handler';\n\nconst Dummy: any = ({ children }: { children: React.ReactNode }) => (\n  <>{children}</>\n);\n\nexport const PanGestureHandler =\n  Dummy as React.ComponentType<PanGestureHandlerProperties>;\n\nexport const GestureHandlerRootView = View;\n\nexport const GestureState = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5,\n};\n\nexport type { PanGestureHandlerGestureEvent } from 'react-native-gesture-handler';\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,IAAA;AAI9B,MAAMC,KAAU,GAAGC,IAAA;EAAA,IAAC;IAAEC;EAAwC,CAAC,GAAAD,IAAA;EAAA,OAC7DH,KAAA,CAAAK,aAAA,CAAAL,KAAA,CAAAM,QAAA,QAAGF,QAAQ,CAAI;AAAA,CAChB;AAED,OAAO,MAAMG,iBAAiB,GAC5BL,KAAyD;AAE3D,OAAO,MAAMM,sBAAsB,GAAGP,IAAI;AAE1C,OAAO,MAAMQ,YAAY,GAAG;EAC1BC,YAAY,EAAE,CAAC;EACfC,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE,CAAC;EACRC,SAAS,EAAE,CAAC;EACZC,MAAM,EAAE,CAAC;EACTC,GAAG,EAAE;AACP,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}