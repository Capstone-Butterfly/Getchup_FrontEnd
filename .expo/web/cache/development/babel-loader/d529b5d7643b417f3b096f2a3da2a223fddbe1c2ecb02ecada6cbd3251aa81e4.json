{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useOverlayTriggerState as $8bn9m$useOverlayTriggerState } from \"@react-stately/overlays\";\nimport { useState as $8bn9m$useState } from \"react\";\nfunction $a28c903ee9ad8dc5$export$79fefeb1c2091ac3(props) {\n  let overlayTriggerState = (0, $8bn9m$useOverlayTriggerState)(props);\n  let [focusStrategy, setFocusStrategy] = (0, $8bn9m$useState)(null);\n  let [expandedKeysStack, setExpandedKeysStack] = (0, $8bn9m$useState)([]);\n  let closeAll = () => {\n    setExpandedKeysStack([]);\n    overlayTriggerState.close();\n  };\n  let openSubmenu = (triggerKey, level) => {\n    setExpandedKeysStack(oldStack => {\n      if (level > oldStack.length) return oldStack;\n      return [...oldStack.slice(0, level), triggerKey];\n    });\n  };\n  let closeSubmenu = (triggerKey, level) => {\n    setExpandedKeysStack(oldStack => {\n      let key = oldStack[level];\n      if (key === triggerKey) return oldStack.slice(0, level);else return oldStack;\n    });\n  };\n  return _objectSpread(_objectSpread({\n    focusStrategy: focusStrategy\n  }, overlayTriggerState), {}, {\n    open(focusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.open();\n    },\n    toggle(focusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.toggle();\n    },\n    close() {\n      closeAll();\n    },\n    expandedKeysStack: expandedKeysStack,\n    openSubmenu: openSubmenu,\n    closeSubmenu: closeSubmenu\n  });\n}\nexport { $a28c903ee9ad8dc5$export$79fefeb1c2091ac3 as useMenuTriggerState };","map":{"version":3,"names":["$a28c903ee9ad8dc5$export$79fefeb1c2091ac3","props","overlayTriggerState","$8bn9m$useOverlayTriggerState","focusStrategy","setFocusStrategy","$8bn9m$useState","expandedKeysStack","setExpandedKeysStack","closeAll","close","openSubmenu","triggerKey","level","oldStack","length","slice","closeSubmenu","key","_objectSpread","open","toggle"],"sources":["/Users/farhang/Desktop/June 17 /Front/Getchup_FrontEnd/node_modules/@react-stately/menu/dist/packages/@react-stately/menu/src/useMenuTriggerState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusStrategy, Key} from '@react-types/shared';\nimport {MenuTriggerProps} from '@react-types/menu';\nimport {OverlayTriggerState, useOverlayTriggerState} from '@react-stately/overlays';\nimport {useState} from 'react';\n\nexport interface MenuTriggerState extends OverlayTriggerState {\n  /** Controls which item will be auto focused when the menu opens. */\n  readonly focusStrategy: FocusStrategy,\n\n  /** Opens the menu. */\n  open(focusStrategy?: FocusStrategy | null): void,\n\n  /** Toggles the menu. */\n  toggle(focusStrategy?: FocusStrategy | null): void\n}\n\nexport interface RootMenuTriggerState extends MenuTriggerState {\n  /** Opens a specific submenu tied to a specific menu item at a specific level. */\n  openSubmenu: (triggerKey: Key, level: number) => void,\n\n  /** Closes a specific submenu tied to a specific menu item at a specific level. */\n  closeSubmenu: (triggerKey: Key, level: number) => void,\n\n  /** An array of open submenu trigger keys within the menu tree.\n   * The index of key within array matches the submenu level in the tree.\n   */\n  expandedKeysStack: Key[],\n\n  /** Closes the menu and all submenus in the menu tree. */\n  close: () => void\n}\n\n/**\n * Manages state for a menu trigger. Tracks whether the menu is currently open,\n * and controls which item will receive focus when it opens. Also tracks the open submenus within\n * the menu tree via their trigger keys.\n */\nexport function useMenuTriggerState(props: MenuTriggerProps): RootMenuTriggerState  {\n  let overlayTriggerState = useOverlayTriggerState(props);\n  let [focusStrategy, setFocusStrategy] = useState<FocusStrategy>(null);\n  let [expandedKeysStack, setExpandedKeysStack] = useState<Key[]>([]);\n\n  let closeAll = () => {\n    setExpandedKeysStack([]);\n    overlayTriggerState.close();\n  };\n\n  let openSubmenu = (triggerKey: Key, level: number) => {\n    setExpandedKeysStack(oldStack => {\n      if (level > oldStack.length) {\n        return oldStack;\n      }\n\n      return [...oldStack.slice(0, level), triggerKey];\n    });\n  };\n\n  let closeSubmenu = (triggerKey: Key, level: number) => {\n    setExpandedKeysStack(oldStack => {\n      let key = oldStack[level];\n      if (key === triggerKey) {\n        return oldStack.slice(0, level);\n      } else {\n        return oldStack;\n      }\n    });\n  };\n\n  return {\n    focusStrategy,\n    ...overlayTriggerState,\n    open(focusStrategy: FocusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.open();\n    },\n    toggle(focusStrategy: FocusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.toggle();\n    },\n    close() {\n      closeAll();\n    },\n    expandedKeysStack,\n    openSubmenu,\n    closeSubmenu\n  };\n}\n"],"mappings":";;;;;AAiDO,SAASA,0CAAoBC,KAAuB;EACzD,IAAIC,mBAAA,GAAsB,IAAAC,6BAAqB,EAAEF,KAAA;EACjD,IAAI,CAACG,aAAA,EAAeC,gBAAA,CAAiB,GAAG,IAAAC,eAAO,EAAiB;EAChE,IAAI,CAACC,iBAAA,EAAmBC,oBAAA,CAAqB,GAAG,IAAAF,eAAO,EAAS,EAAE;EAElE,IAAIG,QAAA,GAAWA,CAAA;IACbD,oBAAA,CAAqB,EAAE;IACvBN,mBAAA,CAAoBQ,KAAK;EAC3B;EAEA,IAAIC,WAAA,GAAcA,CAACC,UAAA,EAAiBC,KAAA;IAClCL,oBAAA,CAAqBM,QAAA;MACnB,IAAID,KAAA,GAAQC,QAAA,CAASC,MAAM,EACzB,OAAOD,QAAA;MAGT,OAAO,C,GAAIA,QAAA,CAASE,KAAK,CAAC,GAAGH,KAAA,GAAQD,UAAA,CAAW;IAClD;EACF;EAEA,IAAIK,YAAA,GAAeA,CAACL,UAAA,EAAiBC,KAAA;IACnCL,oBAAA,CAAqBM,QAAA;MACnB,IAAII,GAAA,GAAMJ,QAAQ,CAACD,KAAA,CAAM;MACzB,IAAIK,GAAA,KAAQN,UAAA,EACV,OAAOE,QAAA,CAASE,KAAK,CAAC,GAAGH,KAAA,OAEzB,OAAOC,QAAA;IAEX;EACF;EAEA,OAAAK,aAAA,CAAAA,aAAA;mBACEf;EAAA,GACGF,mBAAmB;IACtBkB,KAAKhB,aAAA,GAA+B,IAAI;MACtCC,gBAAA,CAAiBD,aAAA;MACjBF,mBAAA,CAAoBkB,IAAI;IAC1B;IACAC,OAAOjB,aAAA,GAA+B,IAAI;MACxCC,gBAAA,CAAiBD,aAAA;MACjBF,mBAAA,CAAoBmB,MAAM;IAC5B;IACAX,MAAA;MACED,QAAA;IACF;uBACAF,iBAAA;iBACAI,WAAA;kBACAM;EAAA;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}