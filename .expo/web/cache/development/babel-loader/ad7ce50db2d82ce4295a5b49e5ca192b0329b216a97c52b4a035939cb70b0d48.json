{"ast":null,"code":"function $941d1d9a6a28982a$var$Cell(props) {\n  return null;\n}\n$941d1d9a6a28982a$var$Cell.getCollectionNode = function* getCollectionNode(props) {\n  let {\n    children: children\n  } = props;\n  let textValue = props.textValue || (typeof children === 'string' ? children : '') || props['aria-label'] || '';\n  yield {\n    type: 'cell',\n    props: props,\n    rendered: children,\n    textValue: textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: false\n  };\n};\nlet $941d1d9a6a28982a$export$f6f0c3fe4ec306ea = $941d1d9a6a28982a$var$Cell;\nexport { $941d1d9a6a28982a$export$f6f0c3fe4ec306ea as Cell };","map":{"version":3,"names":["$941d1d9a6a28982a$var$Cell","props","getCollectionNode","children","textValue","type","rendered","hasChildNodes","$941d1d9a6a28982a$export$f6f0c3fe4ec306ea"],"sources":["/Users/farhang/Desktop/June 17 /Front/Getchup_FrontEnd/node_modules/@react-stately/table/dist/packages/@react-stately/table/src/Cell.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CellProps} from '@react-types/table';\nimport {JSX, ReactElement} from 'react';\nimport {PartialNode} from '@react-stately/collections';\n\nfunction Cell(props: CellProps): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nCell.getCollectionNode = function* getCollectionNode<T>(props: CellProps): Generator<PartialNode<T>> {\n  let {children} = props;\n\n  let textValue = props.textValue || (typeof children === 'string' ? children : '') || props['aria-label'] || '';\n  yield {\n    type: 'cell',\n    props: props,\n    rendered: children,\n    textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: false\n  };\n};\n\n/**\n * A Cell represents the value of a single Column within a Table Row.\n */\n// We don't want getCollectionNode to show up in the type definition\nlet _Cell = Cell as (props: CellProps) => JSX.Element;\nexport {_Cell as Cell};\n"],"mappings":"AAgBA,SAASA,2BAAKC,KAAgB;EAC5B,OAAO;AACT;AAEAD,0BAAA,CAAKE,iBAAiB,GAAG,UAAUA,kBAAqBD,KAAgB;EACtE,IAAI;IAAAE,QAAA,EAACA;EAAQ,CAAC,GAAGF,KAAA;EAEjB,IAAIG,SAAA,GAAYH,KAAA,CAAMG,SAAS,KAAK,OAAOD,QAAA,KAAa,WAAWA,QAAA,GAAW,EAAC,KAAMF,KAAK,CAAC,aAAa,IAAI;EAC5G,MAAM;IACJI,IAAA,EAAM;IACNJ,KAAA,EAAOA,KAAA;IACPK,QAAA,EAAUH,QAAA;eACVC,SAAA;IACA,cAAcH,KAAK,CAAC,aAAa;IACjCM,aAAA,EAAe;EACjB;AACF;AAMA,IAAIC,yCAAA,GAAQR,0BAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}