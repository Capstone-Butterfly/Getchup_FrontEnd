{"ast":null,"code":"import { useLocale as $18f2051aff69b9bf$export$43bb16f9c6d9e3f7 } from \"./context.mjs\";\nimport { NumberFormatter as $JFEdn$NumberFormatter } from \"@internationalized/number\";\nimport { useMemo as $JFEdn$useMemo } from \"react\";\nfunction $a916eb452884faea$export$b7a616150fdb9f44(options = {}) {\n  let {\n    locale: locale\n  } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();\n  return (0, $JFEdn$useMemo)(() => new (0, $JFEdn$NumberFormatter)(locale, options), [locale, options]);\n}\nexport { $a916eb452884faea$export$b7a616150fdb9f44 as useNumberFormatter };","map":{"version":3,"names":["$a916eb452884faea$export$b7a616150fdb9f44","options","locale","$18f2051aff69b9bf$export$43bb16f9c6d9e3f7","$JFEdn$useMemo","$JFEdn$NumberFormatter"],"sources":["/Users/farhang/Desktop/June 17 /Front/Getchup_FrontEnd/node_modules/@react-aria/i18n/dist/packages/@react-aria/i18n/src/useNumberFormatter.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {NumberFormatOptions, NumberFormatter} from '@internationalized/number';\nimport {useLocale} from './context';\nimport {useMemo} from 'react';\n\n/**\n * Provides localized number formatting for the current locale. Automatically updates when the locale changes,\n * and handles caching of the number formatter for performance.\n * @param options - Formatting options.\n */\nexport function useNumberFormatter(options: NumberFormatOptions = {}): Intl.NumberFormat {\n  let {locale} = useLocale();\n  return useMemo(() => new NumberFormatter(locale, options), [locale, options]);\n}\n"],"mappings":";;;AAqBO,SAASA,0CAAmBC,OAAA,GAA+B,CAAC,CAAC;EAClE,IAAI;IAAAC,MAAA,EAACA;EAAM,CAAC,GAAG,IAAAC,yCAAQ;EACvB,OAAO,IAAAC,cAAM,EAAE,MAAM,KAAI,GAAAC,sBAAc,EAAEH,MAAA,EAAQD,OAAA,GAAU,CAACC,MAAA,EAAQD,OAAA,CAAQ;AAC9E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}