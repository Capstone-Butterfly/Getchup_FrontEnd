{"ast":null,"code":"import { disableTextSelection, restoreTextSelection } from './textSelection';\nimport { useMemo, useRef } from 'react';\nimport { useGlobalListeners } from '@react-aria/utils';\nexport function useMove(props) {\n  let {\n    onMoveStart,\n    onMove,\n    onMoveEnd\n  } = props;\n  let state = useRef({\n    didMove: false,\n    lastPosition: null,\n    id: null\n  });\n  let {\n    addGlobalListener,\n    removeGlobalListener\n  } = useGlobalListeners();\n  let moveProps = useMemo(() => {\n    let moveProps = {};\n    let start = () => {\n      disableTextSelection();\n      state.current.didMove = false;\n    };\n    let move = (pointerType, deltaX, deltaY) => {\n      if (deltaX === 0 && deltaY === 0) {\n        return;\n      }\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        onMoveStart === null || onMoveStart === void 0 || onMoveStart({\n          type: 'movestart',\n          pointerType\n        });\n      }\n      onMove({\n        type: 'move',\n        pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY\n      });\n    };\n    let end = pointerType => {\n      restoreTextSelection();\n      if (state.current.didMove) {\n        onMoveEnd === null || onMoveEnd === void 0 || onMoveEnd({\n          type: 'moveend',\n          pointerType\n        });\n      }\n    };\n    if (typeof PointerEvent !== 'undefined') {\n      let onMouseMove = e => {\n        if (e.button === 0) {\n          move('mouse', e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n        }\n      };\n      let onMouseUp = e => {\n        if (e.button === 0) {\n          end('mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = e => {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      let onTouchMove = e => {\n        let touch = [...e.changedTouches].findIndex(({\n          identifier\n        }) => identifier === state.current.id);\n        if (touch >= 0) {\n          let {\n            pageX,\n            pageY\n          } = e.changedTouches[touch];\n          move('touch', pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX,\n            pageY\n          };\n        }\n      };\n      let onTouchEnd = e => {\n        let touch = [...e.changedTouches].findIndex(({\n          identifier\n        }) => identifier === state.current.id);\n        if (touch >= 0) {\n          end('touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = e => {\n        if (e.changedTouches.length === 0 || state.current.id != null) {\n          return;\n        }\n        let {\n          pageX,\n          pageY,\n          identifier\n        } = e.changedTouches[0];\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {\n          pageX,\n          pageY\n        };\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    }\n    let triggerKeyboardMove = (deltaX, deltaY) => {\n      start();\n      move('keyboard', deltaX, deltaY);\n      end('keyboard');\n    };\n    moveProps.onKeyDown = e => {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(-1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(0, 1);\n          break;\n      }\n    };\n    return moveProps;\n  }, [state, onMoveStart, onMove, onMoveEnd, addGlobalListener, removeGlobalListener]);\n  return {\n    moveProps\n  };\n}","map":{"version":3,"names":["disableTextSelection","restoreTextSelection","useMemo","useRef","useGlobalListeners","useMove","props","onMoveStart","onMove","onMoveEnd","state","didMove","lastPosition","id","addGlobalListener","removeGlobalListener","moveProps","start","current","move","pointerType","deltaX","deltaY","type","end","PointerEvent","onMouseMove","e","button","pageX","pageY","onMouseUp","window","onMouseDown","stopPropagation","preventDefault","onTouchMove","touch","changedTouches","findIndex","identifier","onTouchEnd","onTouchStart","length","triggerKeyboardMove","onKeyDown","key"],"sources":["/Users/farhang/Desktop/June 17 /Front/Getchup_FrontEnd/node_modules/@react-native-aria/slider/src/useMove.web.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { disableTextSelection, restoreTextSelection } from './textSelection';\nimport { MoveEvents, PointerType } from '@react-types/shared';\nimport React, { HTMLAttributes, useMemo, useRef } from 'react';\nimport { useGlobalListeners } from '@react-aria/utils';\n\ninterface MoveResult {\n  /** Props to spread on the target element. */\n  moveProps: HTMLAttributes<HTMLElement>;\n}\n\n/**\n * Handles move interactions across mouse, touch, and keyboard, including dragging with\n * the mouse or touch, and using the arrow keys. Normalizes behavior across browsers and\n * platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useMove(props: MoveEvents): MoveResult {\n  let { onMoveStart, onMove, onMoveEnd } = props;\n\n  let state = useRef<{\n    didMove: boolean;\n    lastPosition: { pageX: number; pageY: number } | null;\n    id: number | null;\n  }>({ didMove: false, lastPosition: null, id: null });\n\n  let { addGlobalListener, removeGlobalListener } = useGlobalListeners();\n\n  let moveProps = useMemo(() => {\n    let moveProps: HTMLAttributes<HTMLElement> = {};\n\n    let start = () => {\n      disableTextSelection();\n      state.current.didMove = false;\n    };\n    let move = (pointerType: PointerType, deltaX: number, deltaY: number) => {\n      if (deltaX === 0 && deltaY === 0) {\n        return;\n      }\n\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        // @ts-ignore\n        onMoveStart?.({\n          type: 'movestart',\n          pointerType,\n        });\n      }\n      // @ts-ignore\n      onMove({\n        type: 'move',\n        pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY,\n      });\n    };\n    let end = (pointerType: PointerType) => {\n      restoreTextSelection();\n      if (state.current.didMove) {\n        // @ts-ignore\n        onMoveEnd?.({\n          type: 'moveend',\n          pointerType,\n        });\n      }\n    };\n\n    if (typeof PointerEvent !== 'undefined') {\n      let onMouseMove = (e: MouseEvent) => {\n        if (e.button === 0) {\n          move(\n            'mouse',\n            e.pageX - state.current.lastPosition.pageX,\n            e.pageY - state.current.lastPosition.pageY\n          );\n          state.current.lastPosition = { pageX: e.pageX, pageY: e.pageY };\n        }\n      };\n      let onMouseUp = (e: MouseEvent) => {\n        if (e.button === 0) {\n          end('mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = (e: React.MouseEvent) => {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = { pageX: e.pageX, pageY: e.pageY };\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n\n      let onTouchMove = (e: TouchEvent) => {\n        // @ts-ignore\n        let touch = [...e.changedTouches].findIndex(\n          ({ identifier }) => identifier === state.current.id\n        );\n        if (touch >= 0) {\n          let { pageX, pageY } = e.changedTouches[touch];\n          move(\n            'touch',\n            pageX - state.current.lastPosition.pageX,\n            pageY - state.current.lastPosition.pageY\n          );\n          state.current.lastPosition = { pageX, pageY };\n        }\n      };\n      let onTouchEnd = (e: TouchEvent) => {\n        // @ts-ignore\n        let touch = [...e.changedTouches].findIndex(\n          ({ identifier }) => identifier === state.current.id\n        );\n        if (touch >= 0) {\n          end('touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = (e: React.TouchEvent) => {\n        if (e.changedTouches.length === 0 || state.current.id != null) {\n          return;\n        }\n\n        let { pageX, pageY, identifier } = e.changedTouches[0];\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = { pageX, pageY };\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    }\n\n    let triggerKeyboardMove = (deltaX: number, deltaY: number) => {\n      start();\n      move('keyboard', deltaX, deltaY);\n      end('keyboard');\n    };\n\n    moveProps.onKeyDown = (e) => {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(-1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(0, 1);\n          break;\n      }\n    };\n\n    return moveProps;\n  }, [\n    state,\n    onMoveStart,\n    onMove,\n    onMoveEnd,\n    addGlobalListener,\n    removeGlobalListener,\n  ]);\n\n  return { moveProps };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}