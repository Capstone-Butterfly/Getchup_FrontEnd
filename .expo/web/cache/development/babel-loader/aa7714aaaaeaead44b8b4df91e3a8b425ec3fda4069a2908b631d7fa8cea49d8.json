{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"onDismiss\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport $iYaQO$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport $iYaQO$react from \"react\";\nimport { useLabels as $iYaQO$useLabels } from \"@react-aria/utils\";\nimport { useLocalizedStringFormatter as $iYaQO$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { VisuallyHidden as $iYaQO$VisuallyHidden } from \"@react-aria/visually-hidden\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nfunction $86ea4cb521eb2e37$export$2317d149ed6f78c4(props) {\n  let {\n      onDismiss: onDismiss\n    } = props,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  let stringFormatter = (0, $iYaQO$useLocalizedStringFormatter)((0, $parcel$interopDefault($iYaQO$intlStringsmodulejs)), '@react-aria/overlays');\n  let labels = (0, $iYaQO$useLabels)(otherProps, stringFormatter.format('dismiss'));\n  let onClick = () => {\n    if (onDismiss) onDismiss();\n  };\n  return (0, $iYaQO$react).createElement((0, $iYaQO$VisuallyHidden), null, (0, $iYaQO$react).createElement(\"button\", _objectSpread(_objectSpread({}, labels), {}, {\n    tabIndex: -1,\n    onClick: onClick,\n    style: {\n      width: 1,\n      height: 1\n    }\n  })));\n}\nexport { $86ea4cb521eb2e37$export$2317d149ed6f78c4 as DismissButton };","map":{"version":3,"names":["$86ea4cb521eb2e37$export$2317d149ed6f78c4","props","onDismiss","otherProps","_objectWithoutProperties","_excluded","stringFormatter","$iYaQO$useLocalizedStringFormatter","$parcel$interopDefault","$iYaQO$intlStringsmodulejs","labels","$iYaQO$useLabels","format","onClick","$iYaQO$react","createElement","$iYaQO$VisuallyHidden","_objectSpread","tabIndex","style","width","height"],"sources":["/Users/farhang/Desktop/June 17 /Front/Getchup_FrontEnd/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/src/DismissButton.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMProps} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport React from 'react';\nimport {useLabels} from '@react-aria/utils';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {VisuallyHidden} from '@react-aria/visually-hidden';\n\nexport interface DismissButtonProps extends AriaLabelingProps, DOMProps {\n  /** Called when the dismiss button is activated. */\n  onDismiss?: () => void\n}\n\n/**\n * A visually hidden button that can be used to allow screen reader\n * users to dismiss a modal or popup when there is no visual\n * affordance to do so.\n */\nexport function DismissButton(props: DismissButtonProps) {\n  let {onDismiss, ...otherProps} = props;\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/overlays');\n\n  let labels = useLabels(otherProps, stringFormatter.format('dismiss'));\n\n  let onClick = () => {\n    if (onDismiss) {\n      onDismiss();\n    }\n  };\n\n  return (\n    <VisuallyHidden>\n      <button\n        {...labels}\n        tabIndex={-1}\n        onClick={onClick}\n        style={{width: 1, height: 1}} />\n    </VisuallyHidden>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;AA8BO,SAASA,0CAAcC,KAAyB;EACrD,IAAI;MAAAC,SAAA,EAACA;IAAc,CAAW,GAAGD,KAAA;IAAdE,UAAA,GAAAC,wBAAA,CAAcH,KAAA,EAAAI,SAAA;EACjC,IAAIC,eAAA,GAAkB,IAAAC,kCAA0B,GAAE,GAAAC,sBAAA,CAAAC,0BAAA,CAAW,GAAG;EAEhE,IAAIC,MAAA,GAAS,IAAAC,gBAAQ,EAAER,UAAA,EAAYG,eAAA,CAAgBM,MAAM,CAAC;EAE1D,IAAIC,OAAA,GAAUA,CAAA;IACZ,IAAIX,SAAA,EACFA,SAAA;EAEJ;EAEA,OACE,IAAAY,YAAA,EAAAC,aAAA,EAAC,GAAAC,qBAAa,SACZ,IAAAF,YAAA,EAAAC,aAAA,CAAC,UAAAE,aAAA,CAAAA,aAAA,KACKP,MAAM;IACVQ,QAAA,EAAU;IACVL,OAAA,EAASA,OAAA;IACTM,KAAA,EAAO;MAACC,KAAA,EAAO;MAAGC,MAAA,EAAQ;IAAC;EAAA,E;AAGnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}