{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { chain as $ff5963eb1fccf552$export$e08e3b67e392101e } from \"./chain.mjs\";\nimport { mergeIds as $bdb11010cef70236$export$cd8c9cb68f842629 } from \"./useId.mjs\";\nimport $7jXr9$clsx from \"clsx\";\nfunction $3ef42575df84b30b$export$9d1611c77c2fe928(...args) {\n  let result = _objectSpread({}, args[0]);\n  for (let i = 1; i < args.length; i++) {\n    let props = args[i];\n    for (let key in props) {\n      let a = result[key];\n      let b = props[key];\n      if (typeof a === 'function' && typeof b === 'function' && key[0] === 'o' && key[1] === 'n' && key.charCodeAt(2) >= 65 && key.charCodeAt(2) <= 90) result[key] = (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(a, b);else if ((key === 'className' || key === 'UNSAFE_className') && typeof a === 'string' && typeof b === 'string') result[key] = (0, $7jXr9$clsx)(a, b);else if (key === 'id' && a && b) result.id = (0, $bdb11010cef70236$export$cd8c9cb68f842629)(a, b);else result[key] = b !== undefined ? b : a;\n    }\n  }\n  return result;\n}\nexport { $3ef42575df84b30b$export$9d1611c77c2fe928 as mergeProps };","map":{"version":3,"names":["$3ef42575df84b30b$export$9d1611c77c2fe928","args","result","_objectSpread","i","length","props","key","a","b","charCodeAt","$ff5963eb1fccf552$export$e08e3b67e392101e","$7jXr9$clsx","id","$bdb11010cef70236$export$cd8c9cb68f842629","undefined"],"sources":["/Users/farhang/Desktop/June 17 /Front/Getchup_FrontEnd/node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/mergeProps.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {chain} from './chain';\nimport clsx from 'clsx';\nimport {mergeIds} from './useId';\n\ninterface Props {\n  [key: string]: any\n}\n\ntype PropsArg = Props | null | undefined;\n\n// taken from: https://stackoverflow.com/questions/51603250/typescript-3-parameter-list-intersection-type/51604379#51604379\ntype TupleTypes<T> = { [P in keyof T]: T[P] } extends { [key: number]: infer V } ? NullToObject<V> : never;\ntype NullToObject<T> = T extends (null | undefined) ? {} : T;\n// eslint-disable-next-line no-undef, @typescript-eslint/no-unused-vars\ntype UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends ((k: infer I) => void) ? I : never;\n\n/**\n * Merges multiple props objects together. Event handlers are chained,\n * classNames are combined, and ids are deduplicated - different ids\n * will trigger a side-effect and re-render components hooked up with `useId`.\n * For all other props, the last prop object overrides all previous ones.\n * @param args - Multiple sets of props to merge together.\n */\nexport function mergeProps<T extends PropsArg[]>(...args: T): UnionToIntersection<TupleTypes<T>> {\n  // Start with a base clone of the first argument. This is a lot faster than starting\n  // with an empty object and adding properties as we go.\n  let result: Props = {...args[0]};\n  for (let i = 1; i < args.length; i++) {\n    let props = args[i];\n    for (let key in props) {\n      let a = result[key];\n      let b = props[key];\n\n      // Chain events\n      if (\n        typeof a === 'function' &&\n        typeof b === 'function' &&\n        // This is a lot faster than a regex.\n        key[0] === 'o' &&\n        key[1] === 'n' &&\n        key.charCodeAt(2) >= /* 'A' */ 65 &&\n        key.charCodeAt(2) <= /* 'Z' */ 90\n      ) {\n        result[key] = chain(a, b);\n\n        // Merge classnames, sometimes classNames are empty string which eval to false, so we just need to do a type check\n      } else if (\n        (key === 'className' || key === 'UNSAFE_className') &&\n        typeof a === 'string' &&\n        typeof b === 'string'\n      ) {\n        result[key] = clsx(a, b);\n      } else if (key === 'id' && a && b) {\n        result.id = mergeIds(a, b);\n        // Override others\n      } else {\n        result[key] = b !== undefined ? b : a;\n      }\n    }\n  }\n\n  return result as UnionToIntersection<TupleTypes<T>>;\n}\n"],"mappings":";;;;;;AAmCO,SAASA,0CAAiC,GAAGC,IAAO;EAGzD,IAAIC,MAAA,GAAAC,aAAA,KAAoBF,IAAI,CAAC,EAAE;EAC/B,KAAK,IAAIG,CAAA,GAAI,GAAGA,CAAA,GAAIH,IAAA,CAAKI,MAAM,EAAED,CAAA,IAAK;IACpC,IAAIE,KAAA,GAAQL,IAAI,CAACG,CAAA,CAAE;IACnB,KAAK,IAAIG,GAAA,IAAOD,KAAA,EAAO;MACrB,IAAIE,CAAA,GAAIN,MAAM,CAACK,GAAA,CAAI;MACnB,IAAIE,CAAA,GAAIH,KAAK,CAACC,GAAA,CAAI;MAGlB,IACE,OAAOC,CAAA,KAAM,cACb,OAAOC,CAAA,KAAM,cAEbF,GAAG,CAAC,EAAE,KAAK,OACXA,GAAG,CAAC,EAAE,KAAK,OACXA,GAAA,CAAIG,UAAU,CAAC,MAAgB,MAC/BH,GAAA,CAAIG,UAAU,CAAC,MAAgB,IAE/BR,MAAM,CAACK,GAAA,CAAI,GAAG,IAAAI,yCAAI,EAAEH,CAAA,EAAGC,CAAA,OAGlB,IACL,CAACF,GAAA,KAAQ,eAAeA,GAAA,KAAQ,kBAAiB,KACjD,OAAOC,CAAA,KAAM,YACb,OAAOC,CAAA,KAAM,UAEbP,MAAM,CAACK,GAAA,CAAI,GAAG,IAAAK,WAAG,EAAEJ,CAAA,EAAGC,CAAA,OACjB,IAAIF,GAAA,KAAQ,QAAQC,CAAA,IAAKC,CAAA,EAC9BP,MAAA,CAAOW,EAAE,GAAG,IAAAC,yCAAO,EAAEN,CAAA,EAAGC,CAAA,OAGxBP,MAAM,CAACK,GAAA,CAAI,GAAGE,CAAA,KAAMM,SAAA,GAAYN,CAAA,GAAID,CAAA;IAExC;EACF;EAEA,OAAON,MAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}