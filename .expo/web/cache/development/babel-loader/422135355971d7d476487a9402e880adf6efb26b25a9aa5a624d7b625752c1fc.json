{"ast":null,"code":"import { CollectionBuilder as $eb2240fc39a57fa5$export$bf788dd355e3a401 } from \"./CollectionBuilder.mjs\";\nimport { useMemo as $lbNth$useMemo } from \"react\";\nfunction $7613b1592d41b092$export$6cd28814d92fa9c9(props, factory, context) {\n  let builder = (0, $lbNth$useMemo)(() => new (0, $eb2240fc39a57fa5$export$bf788dd355e3a401)(), []);\n  let {\n    children: children,\n    items: items,\n    collection: collection\n  } = props;\n  let result = (0, $lbNth$useMemo)(() => {\n    if (collection) return collection;\n    let nodes = builder.build({\n      children: children,\n      items: items\n    }, context);\n    return factory(nodes);\n  }, [builder, children, items, collection, context, factory]);\n  return result;\n}\nexport { $7613b1592d41b092$export$6cd28814d92fa9c9 as useCollection };","map":{"version":3,"names":["$7613b1592d41b092$export$6cd28814d92fa9c9","props","factory","context","builder","$lbNth$useMemo","$eb2240fc39a57fa5$export$bf788dd355e3a401","children","items","collection","result","nodes","build"],"sources":["/Users/farhang/Desktop/June 17 /Front/Getchup_FrontEnd/node_modules/@react-stately/collections/dist/packages/@react-stately/collections/src/useCollection.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, CollectionStateBase, Node} from '@react-types/shared';\nimport {CollectionBuilder} from './CollectionBuilder';\nimport {ReactElement, useMemo} from 'react';\n\ninterface CollectionOptions<T, C extends Collection<Node<T>>> extends Omit<CollectionStateBase<T, C>, 'children'> {\n  children?: ReactElement | ReactElement[] | ((item: T) => ReactElement)\n}\n\ntype CollectionFactory<T, C extends Collection<Node<T>>> = (node: Iterable<Node<T>>) => C;\n\nexport function useCollection<T extends object, C extends Collection<Node<T>> = Collection<Node<T>>>(props: CollectionOptions<T, C>, factory: CollectionFactory<T, C>, context?: unknown): C {\n  let builder = useMemo(() => new CollectionBuilder<T>(), []);\n  let {children, items, collection} = props;\n  let result = useMemo(() => {\n    if (collection) {\n      return collection;\n    }\n    let nodes = builder.build({children, items}, context);\n    return factory(nodes);\n  }, [builder, children, items, collection, context, factory]);\n  return result;\n}\n"],"mappings":";;AAsBO,SAASA,0CAAqFC,KAA8B,EAAEC,OAAgC,EAAEC,OAAiB;EACtL,IAAIC,OAAA,GAAU,IAAAC,cAAM,EAAE,MAAM,KAAI,GAAAC,yCAAgB,KAAQ,EAAE;EAC1D,IAAI;IAAAC,QAAA,EAACA,QAAQ;IAAAC,KAAA,EAAEA,KAAK;IAAAC,UAAA,EAAEA;EAAU,CAAC,GAAGR,KAAA;EACpC,IAAIS,MAAA,GAAS,IAAAL,cAAM,EAAE;IACnB,IAAII,UAAA,EACF,OAAOA,UAAA;IAET,IAAIE,KAAA,GAAQP,OAAA,CAAQQ,KAAK,CAAC;gBAACL,QAAA;aAAUC;IAAK,GAAGL,OAAA;IAC7C,OAAOD,OAAA,CAAQS,KAAA;EACjB,GAAG,CAACP,OAAA,EAASG,QAAA,EAAUC,KAAA,EAAOC,UAAA,EAAYN,OAAA,EAASD,OAAA,CAAQ;EAC3D,OAAOQ,MAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}