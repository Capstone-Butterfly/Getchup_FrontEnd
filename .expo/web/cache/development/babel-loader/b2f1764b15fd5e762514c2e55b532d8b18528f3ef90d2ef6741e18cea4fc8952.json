{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { TableCollection as $788781baa30117fa$export$596e1b2e2cf93690 } from \"./TableCollection.mjs\";\nimport { useGridState as $1YSEb$useGridState } from \"@react-stately/grid\";\nimport { useState as $1YSEb$useState, useMemo as $1YSEb$useMemo, useCallback as $1YSEb$useCallback } from \"react\";\nimport { useCollection as $1YSEb$useCollection } from \"@react-stately/collections\";\nconst $4a0dd036d492cee4$var$OPPOSITE_SORT_DIRECTION = {\n  ascending: 'descending',\n  descending: 'ascending'\n};\nfunction $4a0dd036d492cee4$export$907bcc6c48325fd6(props) {\n  let [isKeyboardNavigationDisabled, setKeyboardNavigationDisabled] = (0, $1YSEb$useState)(false);\n  let {\n    selectionMode = 'none',\n    showSelectionCheckboxes: showSelectionCheckboxes,\n    showDragButtons: showDragButtons\n  } = props;\n  let context = (0, $1YSEb$useMemo)(() => ({\n    showSelectionCheckboxes: showSelectionCheckboxes && selectionMode !== 'none',\n    showDragButtons: showDragButtons,\n    selectionMode: selectionMode,\n    columns: []\n  }), [props.children, showSelectionCheckboxes, selectionMode, showDragButtons]);\n  let collection = (0, $1YSEb$useCollection)(props, (0, $1YSEb$useCallback)(nodes => new (0, $788781baa30117fa$export$596e1b2e2cf93690)(nodes, null, context), [context]), context);\n  let {\n    disabledKeys: disabledKeys,\n    selectionManager: selectionManager\n  } = (0, $1YSEb$useGridState)(_objectSpread(_objectSpread({}, props), {}, {\n    collection: collection,\n    disabledBehavior: props.disabledBehavior || 'selection'\n  }));\n  return {\n    collection: collection,\n    disabledKeys: disabledKeys,\n    selectionManager: selectionManager,\n    showSelectionCheckboxes: props.showSelectionCheckboxes || false,\n    sortDescriptor: props.sortDescriptor,\n    isKeyboardNavigationDisabled: collection.size === 0 || isKeyboardNavigationDisabled,\n    setKeyboardNavigationDisabled: setKeyboardNavigationDisabled,\n    sort(columnKey, direction) {\n      var _props_sortDescriptor;\n      props.onSortChange({\n        column: columnKey,\n        direction: direction !== null && direction !== void 0 ? direction : ((_props_sortDescriptor = props.sortDescriptor) === null || _props_sortDescriptor === void 0 ? void 0 : _props_sortDescriptor.column) === columnKey ? $4a0dd036d492cee4$var$OPPOSITE_SORT_DIRECTION[props.sortDescriptor.direction] : 'ascending'\n      });\n    }\n  };\n}\nexport { $4a0dd036d492cee4$export$907bcc6c48325fd6 as useTableState };","map":{"version":3,"names":["$4a0dd036d492cee4$var$OPPOSITE_SORT_DIRECTION","ascending","descending","$4a0dd036d492cee4$export$907bcc6c48325fd6","props","isKeyboardNavigationDisabled","setKeyboardNavigationDisabled","$1YSEb$useState","selectionMode","showSelectionCheckboxes","showDragButtons","context","$1YSEb$useMemo","columns","children","collection","$1YSEb$useCollection","$1YSEb$useCallback","nodes","$788781baa30117fa$export$596e1b2e2cf93690","disabledKeys","selectionManager","$1YSEb$useGridState","_objectSpread","disabledBehavior","sortDescriptor","size","sort","columnKey","direction","_props_sortDescriptor","onSortChange","column"],"sources":["/Users/farhang/Desktop/June 17 /Front/Getchup_FrontEnd/node_modules/@react-stately/table/dist/packages/@react-stately/table/src/useTableState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {GridState, useGridState} from '@react-stately/grid';\nimport {TableCollection as ITableCollection, TableBodyProps, TableHeaderProps} from '@react-types/table';\nimport {Key, Node, SelectionMode, Sortable, SortDescriptor, SortDirection} from '@react-types/shared';\nimport {MultipleSelectionStateProps} from '@react-stately/selection';\nimport {ReactElement, useCallback, useMemo, useState} from 'react';\nimport {TableCollection} from './TableCollection';\nimport {useCollection} from '@react-stately/collections';\n\nexport interface TableState<T> extends GridState<T, ITableCollection<T>> {\n  /** A collection of rows and columns in the table. */\n  collection: ITableCollection<T>,\n  /** Whether the row selection checkboxes should be displayed. */\n  showSelectionCheckboxes: boolean,\n  /** The current sorted column and direction. */\n  sortDescriptor: SortDescriptor,\n  /** Calls the provided onSortChange handler with the provided column key and sort direction. */\n  sort(columnKey: Key, direction?: 'ascending' | 'descending'): void,\n  /** Whether keyboard navigation is disabled, such as when the arrow keys should be handled by a component within a cell. */\n  isKeyboardNavigationDisabled: boolean,\n  /** Set whether keyboard navigation is disabled, such as when the arrow keys should be handled by a component within a cell. */\n  setKeyboardNavigationDisabled: (val: boolean) => void\n}\n\nexport interface CollectionBuilderContext<T> {\n  showSelectionCheckboxes: boolean,\n  showDragButtons: boolean,\n  selectionMode: SelectionMode,\n  columns: Node<T>[]\n}\n\nexport interface TableStateProps<T> extends MultipleSelectionStateProps, Sortable {\n  /** The elements that make up the table. Includes the TableHeader, TableBody, Columns, and Rows. */\n  children?: [ReactElement<TableHeaderProps<T>>, ReactElement<TableBodyProps<T>>],\n  /** A list of row keys to disable. */\n  disabledKeys?: Iterable<Key>,\n  /** A pre-constructed collection to use instead of building one from items and children. */\n  collection?: ITableCollection<T>,\n  /** Whether the row selection checkboxes should be displayed. */\n  showSelectionCheckboxes?: boolean,\n  /** Whether the row drag button should be displayed.\n   * @private\n   */\n  showDragButtons?: boolean\n}\n\nconst OPPOSITE_SORT_DIRECTION = {\n  ascending: 'descending' as SortDirection,\n  descending: 'ascending' as SortDirection\n};\n\n/**\n * Provides state management for a table component. Handles building a collection\n * of columns and rows from props. In addition, it tracks row selection and manages sort order changes.\n */\nexport function useTableState<T extends object>(props: TableStateProps<T>): TableState<T> {\n  let [isKeyboardNavigationDisabled, setKeyboardNavigationDisabled] = useState(false);\n  let {selectionMode = 'none', showSelectionCheckboxes, showDragButtons} = props;\n\n  let context = useMemo(() => ({\n    showSelectionCheckboxes: showSelectionCheckboxes && selectionMode !== 'none',\n    showDragButtons: showDragButtons,\n    selectionMode,\n    columns: []\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }), [props.children, showSelectionCheckboxes, selectionMode, showDragButtons]);\n\n  let collection = useCollection<T, ITableCollection<T>>(\n    props,\n    useCallback((nodes) => new TableCollection(nodes, null, context), [context]),\n    context\n  );\n  let {disabledKeys, selectionManager} = useGridState({\n    ...props,\n    collection,\n    disabledBehavior: props.disabledBehavior || 'selection'\n  });\n\n  return {\n    collection,\n    disabledKeys,\n    selectionManager,\n    showSelectionCheckboxes: props.showSelectionCheckboxes || false,\n    sortDescriptor: props.sortDescriptor,\n    isKeyboardNavigationDisabled: collection.size === 0 || isKeyboardNavigationDisabled,\n    setKeyboardNavigationDisabled,\n    sort(columnKey: Key, direction?: 'ascending' | 'descending') {\n      props.onSortChange({\n        column: columnKey,\n        direction: direction ?? (props.sortDescriptor?.column === columnKey\n          ? OPPOSITE_SORT_DIRECTION[props.sortDescriptor.direction]\n          : 'ascending')\n      });\n    }\n  };\n}\n"],"mappings":";;;;;;;AAyDA,MAAMA,6CAAA,GAA0B;EAC9BC,SAAA,EAAW;EACXC,UAAA,EAAY;AACd;AAMO,SAASC,0CAAgCC,KAAyB;EACvE,IAAI,CAACC,4BAAA,EAA8BC,6BAAA,CAA8B,GAAG,IAAAC,eAAO,EAAE;EAC7E,IAAI;IAACC,aAAA,GAAgB;IAAAC,uBAAA,EAAQA,uBAAuB;IAAAC,eAAA,EAAEA;EAAe,CAAC,GAAGN,KAAA;EAEzE,IAAIO,OAAA,GAAU,IAAAC,cAAM,EAAE,OAAO;IAC3BH,uBAAA,EAAyBA,uBAAA,IAA2BD,aAAA,KAAkB;IACtEE,eAAA,EAAiBA,eAAA;mBACjBF,aAAA;IACAK,OAAA,EAAS;EAEX,IAAI,CAACT,KAAA,CAAMU,QAAQ,EAAEL,uBAAA,EAAyBD,aAAA,EAAeE,eAAA,CAAgB;EAE7E,IAAIK,UAAA,GAAa,IAAAC,oBAAY,EAC3BZ,KAAA,EACA,IAAAa,kBAAU,EAAGC,KAAA,IAAU,KAAI,GAAAC,yCAAc,EAAED,KAAA,EAAO,MAAMP,OAAA,GAAU,CAACA,OAAA,CAAQ,GAC3EA,OAAA;EAEF,IAAI;IAAAS,YAAA,EAACA,YAAY;IAAAC,gBAAA,EAAEA;EAAgB,CAAC,GAAG,IAAAC,mBAAW,EAAAC,aAAA,CAAAA,aAAA,KAC7CnB,KAAK;gBACRW,UAAA;IACAS,gBAAA,EAAkBpB,KAAA,CAAMoB,gBAAgB,IAAI;EAAA,EAC9C;EAEA,OAAO;gBACLT,UAAA;kBACAK,YAAA;sBACAC,gBAAA;IACAZ,uBAAA,EAAyBL,KAAA,CAAMK,uBAAuB,IAAI;IAC1DgB,cAAA,EAAgBrB,KAAA,CAAMqB,cAAc;IACpCpB,4BAAA,EAA8BU,UAAA,CAAWW,IAAI,KAAK,KAAKrB,4BAAA;mCACvDC,6BAAA;IACAqB,KAAKC,SAAc,EAAEC,SAAsC;UAG9BC,qBAAA;MAF3B1B,KAAA,CAAM2B,YAAY,CAAC;QACjBC,MAAA,EAAQJ,SAAA;QACRC,SAAA,EAAWA,SAAA,aAAAA,SAAA,cAAAA,SAAA,GAAc,EAAAC,qBAAA,GAAA1B,KAAA,CAAMqB,cAAc,cAApBK,qBAAA,uBAAAA,qBAAA,CAAsBE,MAAM,MAAKJ,SAAA,GACtD5B,6CAAuB,CAACI,KAAA,CAAMqB,cAAc,CAACI,SAAS,CAAC,GACvD;MACN;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}