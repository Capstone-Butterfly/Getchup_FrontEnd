{"ast":null,"code":"import { getChildNodes as $c5a24bc478652b5f$export$1005530eda016c13 } from \"./getChildNodes.mjs\";\nconst $453cc9f0df89c0a5$var$cache = new WeakMap();\nfunction $453cc9f0df89c0a5$export$77d5aafae4e095b2(collection) {\n  let count = $453cc9f0df89c0a5$var$cache.get(collection);\n  if (count != null) return count;\n  count = 0;\n  let countItems = items => {\n    for (let item of items) if (item.type === 'section') countItems((0, $c5a24bc478652b5f$export$1005530eda016c13)(item, collection));else count++;\n  };\n  countItems(collection);\n  $453cc9f0df89c0a5$var$cache.set(collection, count);\n  return count;\n}\nexport { $453cc9f0df89c0a5$export$77d5aafae4e095b2 as getItemCount };","map":{"version":3,"names":["$453cc9f0df89c0a5$var$cache","WeakMap","$453cc9f0df89c0a5$export$77d5aafae4e095b2","collection","count","get","countItems","items","item","type","$c5a24bc478652b5f$export$1005530eda016c13","set"],"sources":["/Users/farhang/Desktop/June 17 /Front/Getchup_FrontEnd/node_modules/@react-stately/collections/dist/packages/@react-stately/collections/src/getItemCount.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Node} from '@react-types/shared';\nimport {getChildNodes} from './getChildNodes';\n\nconst cache = new WeakMap<Iterable<unknown>, number>();\n\nexport function getItemCount<T>(collection: Collection<Node<T>>): number {\n  let count = cache.get(collection);\n  if (count != null) {\n    return count;\n  }\n\n  count = 0;\n  let countItems = (items: Iterable<Node<T>>) => {\n    for (let item of items) {\n      if (item.type === 'section') {\n        countItems(getChildNodes(item, collection));\n      } else {\n        count++;\n      }\n    }\n  };\n\n  countItems(collection);\n  cache.set(collection, count);\n  return count;\n}\n"],"mappings":";AAeA,MAAMA,2BAAA,GAAQ,IAAIC,OAAA;AAEX,SAASC,0CAAgBC,UAA+B;EAC7D,IAAIC,KAAA,GAAQJ,2BAAA,CAAMK,GAAG,CAACF,UAAA;EACtB,IAAIC,KAAA,IAAS,MACX,OAAOA,KAAA;EAGTA,KAAA,GAAQ;EACR,IAAIE,UAAA,GAAcC,KAAA;IAChB,KAAK,IAAIC,IAAA,IAAQD,KAAA,EACf,IAAIC,IAAA,CAAKC,IAAI,KAAK,WAChBH,UAAA,CAAW,IAAAI,yCAAY,EAAEF,IAAA,EAAML,UAAA,QAE/BC,KAAA;EAGN;EAEAE,UAAA,CAAWH,UAAA;EACXH,2BAAA,CAAMW,GAAG,CAACR,UAAA,EAAYC,KAAA;EACtB,OAAOA,KAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}