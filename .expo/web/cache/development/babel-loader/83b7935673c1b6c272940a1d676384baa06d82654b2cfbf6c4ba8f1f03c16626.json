{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"triggerRef\", \"popoverRef\", \"isNonModal\", \"isKeyboardDismissDisabled\", \"shouldCloseOnInteractOutside\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { ariaHideOutside as $5e3802645cc19319$export$1c3ebcada18427bf } from \"./ariaHideOutside.mjs\";\nimport { useOverlayPosition as $2a41e45df1593e64$export$d39e1813b3bdd0e1 } from \"./useOverlayPosition.mjs\";\nimport { useOverlay as $a11501f3d1d39e6c$export$ea8f71083e90600f } from \"./useOverlay.mjs\";\nimport { usePreventScroll as $49c51c25361d4cd2$export$ee0f7cc6afcd1c18 } from \"./usePreventScroll.mjs\";\nimport { useLayoutEffect as $m0yab$useLayoutEffect, mergeProps as $m0yab$mergeProps } from \"@react-aria/utils\";\nfunction $f2f8a6077418541e$export$542a6fd13ac93354(props, state) {\n  let {\n      triggerRef: triggerRef,\n      popoverRef: popoverRef,\n      isNonModal: isNonModal,\n      isKeyboardDismissDisabled: isKeyboardDismissDisabled,\n      shouldCloseOnInteractOutside: shouldCloseOnInteractOutside\n    } = props,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  let {\n    overlayProps: overlayProps,\n    underlayProps: underlayProps\n  } = (0, $a11501f3d1d39e6c$export$ea8f71083e90600f)({\n    isOpen: state.isOpen,\n    onClose: state.close,\n    shouldCloseOnBlur: true,\n    isDismissable: !isNonModal,\n    isKeyboardDismissDisabled: isKeyboardDismissDisabled,\n    shouldCloseOnInteractOutside: shouldCloseOnInteractOutside\n  }, popoverRef);\n  let {\n    overlayProps: positionProps,\n    arrowProps: arrowProps,\n    placement: placement\n  } = (0, $2a41e45df1593e64$export$d39e1813b3bdd0e1)(_objectSpread(_objectSpread({}, otherProps), {}, {\n    targetRef: triggerRef,\n    overlayRef: popoverRef,\n    isOpen: state.isOpen,\n    onClose: isNonModal ? state.close : null\n  }));\n  (0, $49c51c25361d4cd2$export$ee0f7cc6afcd1c18)({\n    isDisabled: isNonModal || !state.isOpen\n  });\n  (0, $m0yab$useLayoutEffect)(() => {\n    if (state.isOpen && !isNonModal && popoverRef.current) return (0, $5e3802645cc19319$export$1c3ebcada18427bf)([popoverRef.current]);\n  }, [isNonModal, state.isOpen, popoverRef]);\n  return {\n    popoverProps: (0, $m0yab$mergeProps)(overlayProps, positionProps),\n    arrowProps: arrowProps,\n    underlayProps: underlayProps,\n    placement: placement\n  };\n}\nexport { $f2f8a6077418541e$export$542a6fd13ac93354 as usePopover };","map":{"version":3,"names":["$f2f8a6077418541e$export$542a6fd13ac93354","props","state","triggerRef","popoverRef","isNonModal","isKeyboardDismissDisabled","shouldCloseOnInteractOutside","otherProps","_objectWithoutProperties","_excluded","overlayProps","underlayProps","$a11501f3d1d39e6c$export$ea8f71083e90600f","isOpen","onClose","close","shouldCloseOnBlur","isDismissable","positionProps","arrowProps","placement","$2a41e45df1593e64$export$d39e1813b3bdd0e1","_objectSpread","targetRef","overlayRef","$49c51c25361d4cd2$export$ee0f7cc6afcd1c18","isDisabled","$m0yab$useLayoutEffect","current","$5e3802645cc19319$export$1c3ebcada18427bf","popoverProps","$m0yab$mergeProps"],"sources":["/Users/farhang/Desktop/June 17 /Front/Getchup_FrontEnd/node_modules/@react-aria/overlays/dist/packages/@react-aria/overlays/src/usePopover.ts"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ariaHideOutside} from './ariaHideOutside';\nimport {AriaPositionProps, useOverlayPosition} from './useOverlayPosition';\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps, useLayoutEffect} from '@react-aria/utils';\nimport {OverlayTriggerState} from '@react-stately/overlays';\nimport {PlacementAxis} from '@react-types/overlays';\nimport {RefObject} from 'react';\nimport {useOverlay} from './useOverlay';\nimport {usePreventScroll} from './usePreventScroll';\n\nexport interface AriaPopoverProps extends Omit<AriaPositionProps, 'isOpen' | 'onClose' | 'targetRef' | 'overlayRef'> {\n  /**\n   * The ref for the element which the popover positions itself with respect to.\n   */\n  triggerRef: RefObject<Element>,\n  /**\n   * The ref for the popover element.\n   */\n  popoverRef: RefObject<Element>,\n  /**\n   * Whether the popover is non-modal, i.e. elements outside the popover may be\n   * interacted with by assistive technologies.\n   *\n   * Most popovers should not use this option as it may negatively impact the screen\n   * reader experience. Only use with components such as combobox, which are designed\n   * to handle this situation carefully.\n   */\n  isNonModal?: boolean,\n  /**\n   * Whether pressing the escape key to close the popover should be disabled.\n   *\n   * Most popovers should not use this option. When set to true, an alternative\n   * way to close the popover with a keyboard must be provided.\n   *\n   * @default false\n   */\n  isKeyboardDismissDisabled?: boolean,\n  /**\n   * When user interacts with the argument element outside of the popover ref,\n   * return true if onClose should be called. This gives you a chance to filter\n   * out interaction with elements that should not dismiss the popover.\n   * By default, onClose will always be called on interaction outside the popover ref.\n   */\n  shouldCloseOnInteractOutside?: (element: Element) => boolean\n}\n\nexport interface PopoverAria {\n  /** Props for the popover element. */\n  popoverProps: DOMAttributes,\n  /** Props for the popover tip arrow if any. */\n  arrowProps: DOMAttributes,\n  /** Props to apply to the underlay element, if any. */\n  underlayProps: DOMAttributes,\n  /** Placement of the popover with respect to the trigger. */\n  placement: PlacementAxis\n}\n\n/**\n * Provides the behavior and accessibility implementation for a popover component.\n * A popover is an overlay element positioned relative to a trigger.\n */\nexport function usePopover(props: AriaPopoverProps, state: OverlayTriggerState): PopoverAria {\n  let {\n    triggerRef,\n    popoverRef,\n    isNonModal,\n    isKeyboardDismissDisabled,\n    shouldCloseOnInteractOutside,\n    ...otherProps\n  } = props;\n\n  let {overlayProps, underlayProps} = useOverlay(\n    {\n      isOpen: state.isOpen,\n      onClose: state.close,\n      shouldCloseOnBlur: true,\n      isDismissable: !isNonModal,\n      isKeyboardDismissDisabled,\n      shouldCloseOnInteractOutside\n    },\n    popoverRef\n  );\n\n  let {overlayProps: positionProps, arrowProps, placement} = useOverlayPosition({\n    ...otherProps,\n    targetRef: triggerRef,\n    overlayRef: popoverRef,\n    isOpen: state.isOpen,\n    onClose: isNonModal ? state.close : null\n  });\n\n  usePreventScroll({\n    isDisabled: isNonModal || !state.isOpen\n  });\n\n  useLayoutEffect(() => {\n    if (state.isOpen && !isNonModal && popoverRef.current) {\n      return ariaHideOutside([popoverRef.current]);\n    }\n  }, [isNonModal, state.isOpen, popoverRef]);\n\n  return {\n    popoverProps: mergeProps(overlayProps, positionProps),\n    arrowProps,\n    underlayProps,\n    placement\n  };\n}\n"],"mappings":";;;;;;;;;;AAyEO,SAASA,0CAAWC,KAAuB,EAAEC,KAA0B;EAC5E,IAAI;MAAAC,UAAA,EACFA,UAAU;MAAAC,UAAA,EACVA,UAAU;MAAAC,UAAA,EACVA,UAAU;MAAAC,yBAAA,EACVA,yBAAyB;MAAAC,4BAAA,EACzBA;IACG,CACJ,GAAGN,KAAA;IADCO,UAAA,GAAAC,wBAAA,CACDR,KAAA,EAAAS,SAAA;EAEJ,IAAI;IAAAC,YAAA,EAACA,YAAY;IAAAC,aAAA,EAAEA;EAAa,CAAC,GAAG,IAAAC,yCAAS,EAC3C;IACEC,MAAA,EAAQZ,KAAA,CAAMY,MAAM;IACpBC,OAAA,EAASb,KAAA,CAAMc,KAAK;IACpBC,iBAAA,EAAmB;IACnBC,aAAA,EAAe,CAACb,UAAA;+BAChBC,yBAAA;kCACAC;EACF,GACAH,UAAA;EAGF,IAAI;IAACO,YAAA,EAAcQ,aAAa;IAAAC,UAAA,EAAEA,UAAU;IAAAC,SAAA,EAAEA;EAAS,CAAC,GAAG,IAAAC,yCAAiB,EAAAC,aAAA,CAAAA,aAAA,KACvEf,UAAU;IACbgB,SAAA,EAAWrB,UAAA;IACXsB,UAAA,EAAYrB,UAAA;IACZU,MAAA,EAAQZ,KAAA,CAAMY,MAAM;IACpBC,OAAA,EAASV,UAAA,GAAaH,KAAA,CAAMc,KAAK,GAAG;EAAA,EACtC;EAEA,IAAAU,yCAAe,EAAE;IACfC,UAAA,EAAYtB,UAAA,IAAc,CAACH,KAAA,CAAMY;EACnC;EAEA,IAAAc,sBAAc,EAAE;IACd,IAAI1B,KAAA,CAAMY,MAAM,IAAI,CAACT,UAAA,IAAcD,UAAA,CAAWyB,OAAO,EACnD,OAAO,IAAAC,yCAAc,EAAE,CAAC1B,UAAA,CAAWyB,OAAO,CAAC;EAE/C,GAAG,CAACxB,UAAA,EAAYH,KAAA,CAAMY,MAAM,EAAEV,UAAA,CAAW;EAEzC,OAAO;IACL2B,YAAA,EAAc,IAAAC,iBAAS,EAAErB,YAAA,EAAcQ,aAAA;gBACvCC,UAAA;mBACAR,aAAA;eACAS;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}