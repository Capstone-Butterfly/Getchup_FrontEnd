{"ast":null,"code":"import { ListCollection as $a02d57049d202695$export$d085fb9e920b5ca7 } from \"./ListCollection.mjs\";\nimport { useMultipleSelectionState as $d5vlZ$useMultipleSelectionState, SelectionManager as $d5vlZ$SelectionManager } from \"@react-stately/selection\";\nimport { useMemo as $d5vlZ$useMemo, useCallback as $d5vlZ$useCallback, useRef as $d5vlZ$useRef, useEffect as $d5vlZ$useEffect } from \"react\";\nimport { useCollection as $d5vlZ$useCollection } from \"@react-stately/collections\";\nfunction $e72dd72e1c76a225$export$2f645645f7bca764(props) {\n  let {\n    filter: filter\n  } = props;\n  let selectionState = (0, $d5vlZ$useMultipleSelectionState)(props);\n  let disabledKeys = (0, $d5vlZ$useMemo)(() => props.disabledKeys ? new Set(props.disabledKeys) : new Set(), [props.disabledKeys]);\n  let factory = (0, $d5vlZ$useCallback)(nodes => filter ? new (0, $a02d57049d202695$export$d085fb9e920b5ca7)(filter(nodes)) : new (0, $a02d57049d202695$export$d085fb9e920b5ca7)(nodes), [filter]);\n  let context = (0, $d5vlZ$useMemo)(() => ({\n    suppressTextValueWarning: props.suppressTextValueWarning\n  }), [props.suppressTextValueWarning]);\n  let collection = (0, $d5vlZ$useCollection)(props, factory, context);\n  let selectionManager = (0, $d5vlZ$useMemo)(() => new (0, $d5vlZ$SelectionManager)(collection, selectionState), [collection, selectionState]);\n  const cachedCollection = (0, $d5vlZ$useRef)(null);\n  (0, $d5vlZ$useEffect)(() => {\n    if (selectionState.focusedKey != null && !collection.getItem(selectionState.focusedKey)) {\n      const startItem = cachedCollection.current.getItem(selectionState.focusedKey);\n      const cachedItemNodes = [...cachedCollection.current.getKeys()].map(key => {\n        const itemNode = cachedCollection.current.getItem(key);\n        return itemNode.type === 'item' ? itemNode : null;\n      }).filter(node => node !== null);\n      const itemNodes = [...collection.getKeys()].map(key => {\n        const itemNode = collection.getItem(key);\n        return itemNode.type === 'item' ? itemNode : null;\n      }).filter(node => node !== null);\n      const diff = cachedItemNodes.length - itemNodes.length;\n      let index = Math.min(diff > 1 ? Math.max(startItem.index - diff + 1, 0) : startItem.index, itemNodes.length - 1);\n      let newNode;\n      while (index >= 0) {\n        if (!selectionManager.isDisabled(itemNodes[index].key)) {\n          newNode = itemNodes[index];\n          break;\n        }\n        if (index < itemNodes.length - 1) index++;else {\n          if (index > startItem.index) index = startItem.index;\n          index--;\n        }\n      }\n      selectionState.setFocusedKey(newNode ? newNode.key : null);\n    }\n    cachedCollection.current = collection;\n  }, [collection, selectionManager, selectionState, selectionState.focusedKey]);\n  return {\n    collection: collection,\n    disabledKeys: disabledKeys,\n    selectionManager: selectionManager\n  };\n}\nexport { $e72dd72e1c76a225$export$2f645645f7bca764 as useListState };","map":{"version":3,"names":["$e72dd72e1c76a225$export$2f645645f7bca764","props","filter","selectionState","$d5vlZ$useMultipleSelectionState","disabledKeys","$d5vlZ$useMemo","Set","factory","$d5vlZ$useCallback","nodes","$a02d57049d202695$export$d085fb9e920b5ca7","context","suppressTextValueWarning","collection","$d5vlZ$useCollection","selectionManager","$d5vlZ$SelectionManager","cachedCollection","$d5vlZ$useRef","$d5vlZ$useEffect","focusedKey","getItem","startItem","current","cachedItemNodes","getKeys","map","key","itemNode","type","node","itemNodes","diff","length","index","Math","min","max","newNode","isDisabled","setFocusedKey"],"sources":["/Users/farhang/Desktop/June 17 /Front/Getchup_FrontEnd/node_modules/@react-stately/list/dist/packages/@react-stately/list/src/useListState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, CollectionStateBase, Key, Node} from '@react-types/shared';\nimport {ListCollection} from './ListCollection';\nimport {MultipleSelectionStateProps, SelectionManager, useMultipleSelectionState} from '@react-stately/selection';\nimport {useCallback, useEffect, useMemo, useRef} from 'react';\nimport {useCollection} from '@react-stately/collections';\n\nexport interface ListProps<T> extends CollectionStateBase<T>, MultipleSelectionStateProps {\n  /** Filter function to generate a filtered list of nodes. */\n  filter?: (nodes: Iterable<Node<T>>) => Iterable<Node<T>>,\n  /** @private */\n  suppressTextValueWarning?: boolean\n}\n\nexport interface ListState<T> {\n  /** A collection of items in the list. */\n  collection: Collection<Node<T>>,\n\n  /** A set of items that are disabled. */\n  disabledKeys: Set<Key>,\n\n  /** A selection manager to read and update multiple selection state. */\n  selectionManager: SelectionManager\n}\n\n/**\n * Provides state management for list-like components. Handles building a collection\n * of items from props, and manages multiple selection state.\n */\nexport function useListState<T extends object>(props: ListProps<T>): ListState<T>  {\n  let {filter} = props;\n\n  let selectionState = useMultipleSelectionState(props);\n  let disabledKeys = useMemo(() =>\n    props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()\n  , [props.disabledKeys]);\n\n  let factory = useCallback(nodes => filter ? new ListCollection(filter(nodes)) : new ListCollection(nodes as Iterable<Node<T>>), [filter]);\n  let context = useMemo(() => ({suppressTextValueWarning: props.suppressTextValueWarning}), [props.suppressTextValueWarning]);\n\n  let collection = useCollection(props, factory, context);\n\n  let selectionManager = useMemo(() =>\n    new SelectionManager(collection, selectionState)\n    , [collection, selectionState]\n  );\n\n  // Reset focused key if that item is deleted from the collection.\n  const cachedCollection = useRef(null);\n  useEffect(() => {\n    if (selectionState.focusedKey != null && !collection.getItem(selectionState.focusedKey)) {\n      const startItem = cachedCollection.current.getItem(selectionState.focusedKey);\n      const cachedItemNodes = [...cachedCollection.current.getKeys()].map(\n        key => {\n          const itemNode = cachedCollection.current.getItem(key);\n          return itemNode.type === 'item' ? itemNode : null;\n        }\n      ).filter(node => node !== null);\n      const itemNodes = [...collection.getKeys()].map(\n        key => {\n          const itemNode = collection.getItem(key);\n          return itemNode.type === 'item' ? itemNode : null;\n        }\n      ).filter(node => node !== null);\n      const diff = cachedItemNodes.length - itemNodes.length;\n      let index = Math.min(\n        (\n          diff > 1 ?\n          Math.max(startItem.index - diff + 1, 0) :\n          startItem.index\n        ),\n        itemNodes.length - 1);\n      let newNode:Node<T>;\n      while (index >= 0) {\n        if (!selectionManager.isDisabled(itemNodes[index].key)) {\n          newNode = itemNodes[index];\n          break;\n        }\n        // Find next, not disabled item.\n        if (index < itemNodes.length - 1) {\n          index++;\n        // Otherwise, find previous, not disabled item.\n        } else {\n          if (index > startItem.index) {\n            index = startItem.index;\n          }\n          index--;\n        }\n      }\n      selectionState.setFocusedKey(newNode ? newNode.key : null);\n    }\n    cachedCollection.current = collection;\n  }, [collection, selectionManager, selectionState, selectionState.focusedKey]);\n\n  return {\n    collection,\n    disabledKeys,\n    selectionManager\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}