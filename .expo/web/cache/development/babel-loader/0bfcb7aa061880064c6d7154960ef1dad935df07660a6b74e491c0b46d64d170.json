{"ast":null,"code":"import $kIQ5E$react from \"react\";\nfunction $1cd244557c2f97d5$var$Column(props) {\n  return null;\n}\n$1cd244557c2f97d5$var$Column.getCollectionNode = function* getCollectionNode(props, context) {\n  let {\n    title: title,\n    children: children,\n    childColumns: childColumns\n  } = props;\n  let rendered = title || children;\n  let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'];\n  let fullNodes = yield {\n    type: 'column',\n    hasChildNodes: !!childColumns || title && (0, $kIQ5E$react).Children.count(children) > 0,\n    rendered: rendered,\n    textValue: textValue,\n    props: props,\n    *childNodes() {\n      if (childColumns) for (let child of childColumns) yield {\n        type: 'column',\n        value: child\n      };else if (title) {\n        let childColumns = [];\n        (0, $kIQ5E$react).Children.forEach(children, child => {\n          childColumns.push({\n            type: 'column',\n            element: child\n          });\n        });\n        yield* childColumns;\n      }\n    },\n    shouldInvalidate(newContext) {\n      updateContext(newContext);\n      return false;\n    }\n  };\n  let updateContext = context => {\n    for (let node of fullNodes) if (!node.hasChildNodes) context.columns.push(node);\n  };\n  updateContext(context);\n};\nlet $1cd244557c2f97d5$export$816b5d811295e6bc = $1cd244557c2f97d5$var$Column;\nexport { $1cd244557c2f97d5$export$816b5d811295e6bc as Column };","map":{"version":3,"names":["$1cd244557c2f97d5$var$Column","props","getCollectionNode","context","title","children","childColumns","rendered","textValue","fullNodes","type","hasChildNodes","$kIQ5E$react","Children","count","childNodes","child","value","forEach","push","element","shouldInvalidate","newContext","updateContext","node","columns","$1cd244557c2f97d5$export$816b5d811295e6bc"],"sources":["/Users/farhang/Desktop/June 17 /Front/Getchup_FrontEnd/node_modules/@react-stately/table/dist/packages/@react-stately/table/src/Column.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBuilderContext} from './useTableState';\nimport {ColumnProps} from '@react-types/table';\nimport {GridNode} from '@react-types/grid';\nimport {PartialNode} from '@react-stately/collections';\nimport React, {JSX, ReactElement} from 'react';\n\nfunction Column<T>(props: ColumnProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nColumn.getCollectionNode = function* getCollectionNode<T>(props: ColumnProps<T>, context: CollectionBuilderContext<T>): Generator<PartialNode<T>, void, GridNode<T>[]> {\n  let {title, children, childColumns} = props;\n\n  let rendered = title || children;\n  let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'];\n\n  let fullNodes = yield {\n    type: 'column',\n    hasChildNodes: !!childColumns || (title && React.Children.count(children) > 0),\n    rendered,\n    textValue,\n    props,\n    *childNodes() {\n      if (childColumns) {\n        for (let child of childColumns) {\n          yield {\n            type: 'column',\n            value: child\n          };\n        }\n      } else if (title) {\n        let childColumns: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          childColumns.push({\n            type: 'column',\n            element: child as ReactElement<ColumnProps<T>>\n          });\n        });\n\n        yield* childColumns;\n      }\n    },\n    shouldInvalidate(newContext: CollectionBuilderContext<T>) {\n      // This is a bit of a hack, but it works.\n      // If this method is called, then there's a cached version of this node available.\n      // But, we need to keep the list of columns in the new context up to date.\n      updateContext(newContext);\n      return false;\n    }\n  };\n\n  let updateContext = (context: CollectionBuilderContext<T>) => {\n    // register leaf columns on the context so that <Row> can access them\n    for (let node of fullNodes) {\n      if (!node.hasChildNodes) {\n        context.columns.push(node);\n      }\n    }\n  };\n\n  updateContext(context);\n};\n\n/**\n * A Column represents a field of each item within a Table. Columns may also contain nested\n * Column elements to represent column groups. Nested columns can be statically defined as\n * children, or dynamically generated using a function based on the `childColumns` prop.\n */\n// We don't want getCollectionNode to show up in the type definition\nlet _Column = Column as <T>(props: ColumnProps<T>) => JSX.Element;\nexport {_Column as Column};\n"],"mappings":";AAkBA,SAASA,6BAAUC,KAAqB;EACtC,OAAO;AACT;AAEAD,4BAAA,CAAOE,iBAAiB,GAAG,UAAUA,kBAAqBD,KAAqB,EAAEE,OAAoC;EACnH,IAAI;IAAAC,KAAA,EAACA,KAAK;IAAAC,QAAA,EAAEA,QAAQ;IAAAC,YAAA,EAAEA;EAAY,CAAC,GAAGL,KAAA;EAEtC,IAAIM,QAAA,GAAWH,KAAA,IAASC,QAAA;EACxB,IAAIG,SAAA,GAAYP,KAAA,CAAMO,SAAS,KAAK,OAAOD,QAAA,KAAa,WAAWA,QAAA,GAAW,EAAC,KAAMN,KAAK,CAAC,aAAa;EAExG,IAAIQ,SAAA,GAAY,MAAM;IACpBC,IAAA,EAAM;IACNC,aAAA,EAAe,CAAC,CAACL,YAAA,IAAiBF,KAAA,IAAS,IAAAQ,YAAI,EAAEC,QAAQ,CAACC,KAAK,CAACT,QAAA,IAAY;cAC5EE,QAAA;eACAC,SAAA;WACAP,KAAA;IACA,CAACc,WAAA;MACC,IAAIT,YAAA,EACF,KAAK,IAAIU,KAAA,IAASV,YAAA,EAChB,MAAM;QACJI,IAAA,EAAM;QACNO,KAAA,EAAOD;MACT,OAEG,IAAIZ,KAAA,EAAO;QAChB,IAAIE,YAAA,GAAiC,EAAE;QACvC,IAAAM,YAAI,EAAEC,QAAQ,CAACK,OAAO,CAACb,QAAA,EAAUW,KAAA;UAC/BV,YAAA,CAAaa,IAAI,CAAC;YAChBT,IAAA,EAAM;YACNU,OAAA,EAASJ;UACX;QACF;QAEA,OAAOV,YAAA;MACT;IACF;IACAe,iBAAiBC,UAAuC;MAItDC,aAAA,CAAcD,UAAA;MACd,OAAO;IACT;EACF;EAEA,IAAIC,aAAA,GAAiBpB,OAAA;IAEnB,KAAK,IAAIqB,IAAA,IAAQf,SAAA,EACf,IAAI,CAACe,IAAA,CAAKb,aAAa,EACrBR,OAAA,CAAQsB,OAAO,CAACN,IAAI,CAACK,IAAA;EAG3B;EAEAD,aAAA,CAAcpB,OAAA;AAChB;AAQA,IAAIuB,yCAAA,GAAU1B,4BAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}