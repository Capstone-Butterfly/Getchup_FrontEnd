{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"__element\", \"hrefAttrs\", \"onLayout\", \"onMoveShouldSetResponder\", \"onMoveShouldSetResponderCapture\", \"onResponderEnd\", \"onResponderGrant\", \"onResponderMove\", \"onResponderReject\", \"onResponderRelease\", \"onResponderStart\", \"onResponderTerminate\", \"onResponderTerminationRequest\", \"onScrollShouldSetResponder\", \"onScrollShouldSetResponderCapture\", \"onSelectionChangeShouldSetResponder\", \"onSelectionChangeShouldSetResponderCapture\", \"onStartShouldSetResponder\", \"onStartShouldSetResponderCapture\"];\nimport * as React from 'react';\nimport StyleSheet from 'react-native-web/dist/exports/StyleSheet';\nimport TextAncestorContext from 'react-native-web/dist/exports/Text/TextAncestorContext';\nimport createElement from 'react-native-web/dist/exports/createElement';\nimport * as forwardedProps from 'react-native-web/dist/modules/forwardedProps';\nimport pick from 'react-native-web/dist/modules/pick';\nimport useElementLayout from 'react-native-web/dist/modules/useElementLayout';\nimport { useLocaleContext, getLocaleDirection } from 'react-native-web/dist/modules/useLocale';\nimport useMergeRefs from 'react-native-web/dist/modules/useMergeRefs';\nimport usePlatformMethods from 'react-native-web/dist/modules/usePlatformMethods';\nimport useResponderEvents from 'react-native-web/dist/modules/useResponderEvents';\nconst forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {\n  href: true,\n  lang: true,\n  onScroll: true,\n  onWheel: true,\n  pointerEvents: true\n});\nconst pickProps = props => pick(props, forwardPropsList);\nconst View = React.forwardRef((props, forwardedRef) => {\n  const {\n      __element,\n      hrefAttrs,\n      onLayout,\n      onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture,\n      onResponderEnd,\n      onResponderGrant,\n      onResponderMove,\n      onResponderReject,\n      onResponderRelease,\n      onResponderStart,\n      onResponderTerminate,\n      onResponderTerminationRequest,\n      onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture,\n      onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder,\n      onStartShouldSetResponderCapture\n    } = props,\n    rest = _objectWithoutProperties(props, _excluded);\n  const hasTextAncestor = React.useContext(TextAncestorContext);\n  const hostRef = React.useRef(null);\n  const {\n    direction: contextDirection\n  } = useLocaleContext();\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture,\n    onResponderEnd,\n    onResponderGrant,\n    onResponderMove,\n    onResponderReject,\n    onResponderRelease,\n    onResponderStart,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder,\n    onStartShouldSetResponderCapture\n  });\n  let component = __element ?? 'div';\n  const langDirection = props.lang != null ? getLocaleDirection(props.lang) : null;\n  const componentDirection = props.dir || langDirection;\n  const writingDirection = componentDirection || contextDirection;\n  const supportedProps = pickProps(rest);\n  supportedProps.dir = componentDirection;\n  supportedProps.style = [styles.view$raw, hasTextAncestor && styles.inline, props.style];\n  if (props.href != null) {\n    component = 'a';\n    if (hrefAttrs != null) {\n      const {\n        download,\n        rel,\n        target\n      } = hrefAttrs;\n      if (download != null) {\n        supportedProps.download = download;\n      }\n      if (rel != null) {\n        supportedProps.rel = rel;\n      }\n      if (typeof target === 'string') {\n        supportedProps.target = target.charAt(0) !== '_' ? '_' + target : target;\n      }\n    }\n  }\n  const platformMethodsRef = usePlatformMethods(supportedProps);\n  const setRef = useMergeRefs(hostRef, platformMethodsRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return createElement(component, supportedProps, {\n    writingDirection\n  });\n});\nif (__DEV__) {\n  View.displayName = 'View';\n}\nconst styles = StyleSheet.create({\n  view$raw: {\n    alignItems: 'stretch',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexBasis: 'auto',\n    flexDirection: 'column',\n    flexShrink: 0,\n    listStyle: 'none',\n    margin: 0,\n    minHeight: 0,\n    minWidth: 0,\n    padding: 0,\n    position: 'relative',\n    textDecoration: 'none',\n    zIndex: 0\n  },\n  inline: {\n    display: 'inline-flex'\n  }\n});\nexport default View;","map":{"version":3,"names":["React","StyleSheet","TextAncestorContext","createElement","forwardedProps","pick","useElementLayout","useLocaleContext","getLocaleDirection","useMergeRefs","usePlatformMethods","useResponderEvents","forwardPropsList","Object","assign","defaultProps","accessibilityProps","clickProps","focusProps","keyboardProps","mouseProps","touchProps","styleProps","href","lang","onScroll","onWheel","pointerEvents","pickProps","props","View","forwardRef","forwardedRef","__element","hrefAttrs","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","rest","_objectWithoutProperties","_excluded","hasTextAncestor","useContext","hostRef","useRef","direction","contextDirection","component","langDirection","componentDirection","dir","writingDirection","supportedProps","style","styles","view$raw","inline","download","rel","target","charAt","platformMethodsRef","setRef","ref","__DEV__","displayName","create","alignItems","backgroundColor","border","boxSizing","display","flexBasis","flexDirection","flexShrink","listStyle","margin","minHeight","minWidth","padding","position","textDecoration","zIndex"],"sources":["/Users/farhang/Desktop/June 17 /Front/Getchup_FrontEnd/node_modules/@expo/html-elements/src/primitives/RNWView.tsx"],"sourcesContent":["/**\n * Copyright (c) Expo.\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport * as React from 'react';\nimport StyleSheet from 'react-native-web/dist/exports/StyleSheet';\nimport TextAncestorContext from 'react-native-web/dist/exports/Text/TextAncestorContext';\nimport createElement from 'react-native-web/dist/exports/createElement';\nimport * as forwardedProps from 'react-native-web/dist/modules/forwardedProps';\nimport pick from 'react-native-web/dist/modules/pick';\nimport useElementLayout from 'react-native-web/dist/modules/useElementLayout';\nimport { useLocaleContext, getLocaleDirection } from 'react-native-web/dist/modules/useLocale';\nimport useMergeRefs from 'react-native-web/dist/modules/useMergeRefs';\nimport usePlatformMethods from 'react-native-web/dist/modules/usePlatformMethods';\nimport useResponderEvents from 'react-native-web/dist/modules/useResponderEvents';\nimport { PlatformMethods, ViewProps } from 'react-native-web/dist/types';\n\nconst forwardPropsList = Object.assign(\n  {},\n  forwardedProps.defaultProps,\n  forwardedProps.accessibilityProps,\n  forwardedProps.clickProps,\n  forwardedProps.defaultProps,\n  forwardedProps.accessibilityProps,\n  forwardedProps.clickProps,\n  forwardedProps.focusProps,\n  forwardedProps.keyboardProps,\n  forwardedProps.mouseProps,\n  forwardedProps.touchProps,\n  forwardedProps.styleProps,\n  {\n    href: true,\n    lang: true,\n    onScroll: true,\n    onWheel: true,\n    pointerEvents: true,\n  }\n);\nconst pickProps = (props) => pick(props, forwardPropsList);\n\n/**\n * This is the View from react-native-web copied out in order to supply a custom `__element` property.\n * In the past, you could use `createElement` to create an element with a custom HTML element, but this changed\n * somewhere between 0.14...0.17.\n */\n\nconst View = React.forwardRef<ViewProps, HTMLElement & PlatformMethods>((props, forwardedRef) => {\n  const {\n    __element,\n    hrefAttrs,\n    onLayout,\n    onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture,\n    onResponderEnd,\n    onResponderGrant,\n    onResponderMove,\n    onResponderReject,\n    onResponderRelease,\n    onResponderStart,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder,\n    onStartShouldSetResponderCapture,\n    ...rest\n  } = props as any;\n\n  // if (process.env.NODE_ENV !== 'production') {\n  //   React.Children.toArray(props.children).forEach((item) => {\n  //     if (typeof item === 'string') {\n  //       console.error(`Unexpected text node: ${item}. A text node cannot be a child of a <View>.`);\n  //     }\n  //   });\n  // }\n\n  const hasTextAncestor = React.useContext(TextAncestorContext);\n  const hostRef = React.useRef(null);\n  const { direction: contextDirection } = useLocaleContext();\n\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture,\n    onResponderEnd,\n    onResponderGrant,\n    onResponderMove,\n    onResponderReject,\n    onResponderRelease,\n    onResponderStart,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder,\n    onStartShouldSetResponderCapture,\n  });\n\n  let component = __element ?? 'div';\n\n  const langDirection = props.lang != null ? getLocaleDirection(props.lang) : null;\n  const componentDirection = props.dir || langDirection;\n  const writingDirection = componentDirection || contextDirection;\n\n  const supportedProps = pickProps(rest);\n  supportedProps.dir = componentDirection;\n  supportedProps.style = [styles.view$raw, hasTextAncestor && styles.inline, props.style];\n  if (props.href != null) {\n    component = 'a';\n    if (hrefAttrs != null) {\n      const { download, rel, target } = hrefAttrs;\n      if (download != null) {\n        supportedProps.download = download;\n      }\n      if (rel != null) {\n        supportedProps.rel = rel;\n      }\n      if (typeof target === 'string') {\n        supportedProps.target = target.charAt(0) !== '_' ? '_' + target : target;\n      }\n    }\n  }\n\n  const platformMethodsRef = usePlatformMethods(supportedProps);\n  const setRef = useMergeRefs(hostRef, platformMethodsRef, forwardedRef);\n\n  supportedProps.ref = setRef;\n\n  return createElement(component, supportedProps, { writingDirection });\n});\n\nif (__DEV__) {\n  View.displayName = 'View';\n}\n\nconst styles = StyleSheet.create({\n  view$raw: {\n    alignItems: 'stretch',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexBasis: 'auto',\n    flexDirection: 'column',\n    flexShrink: 0,\n    listStyle: 'none',\n    margin: 0,\n    minHeight: 0,\n    minWidth: 0,\n    padding: 0,\n    position: 'relative',\n    textDecoration: 'none',\n    zIndex: 0,\n  },\n  inline: {\n    display: 'inline-flex',\n  },\n});\n\nexport default View;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}