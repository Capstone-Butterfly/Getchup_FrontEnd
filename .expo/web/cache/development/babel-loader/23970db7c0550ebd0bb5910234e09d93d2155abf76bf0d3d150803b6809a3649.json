{"ast":null,"code":"import { useState as $7exkJ$useState, useMemo as $7exkJ$useMemo, useCallback as $7exkJ$useCallback } from \"react\";\nfunction $e5614764aa47eb35$export$cfc51cf86138bf98(props, state) {\n  let {\n    triggerKey: triggerKey\n  } = props;\n  let {\n    expandedKeysStack: expandedKeysStack,\n    openSubmenu: openSubmenu,\n    closeSubmenu: closeSubmenu,\n    close: closeAll\n  } = state;\n  let [submenuLevel] = (0, $7exkJ$useState)(expandedKeysStack === null || expandedKeysStack === void 0 ? void 0 : expandedKeysStack.length);\n  let isOpen = (0, $7exkJ$useMemo)(() => expandedKeysStack[submenuLevel] === triggerKey, [expandedKeysStack, triggerKey, submenuLevel]);\n  let [focusStrategy, setFocusStrategy] = (0, $7exkJ$useState)(null);\n  let open = (0, $7exkJ$useCallback)((focusStrategy = null) => {\n    setFocusStrategy(focusStrategy);\n    openSubmenu(triggerKey, submenuLevel);\n  }, [openSubmenu, submenuLevel, triggerKey]);\n  let close = (0, $7exkJ$useCallback)(() => {\n    setFocusStrategy(null);\n    closeSubmenu(triggerKey, submenuLevel);\n  }, [closeSubmenu, submenuLevel, triggerKey]);\n  let toggle = (0, $7exkJ$useCallback)((focusStrategy = null) => {\n    setFocusStrategy(focusStrategy);\n    if (isOpen) close();else open(focusStrategy);\n  }, [close, open, isOpen]);\n  return (0, $7exkJ$useMemo)(() => ({\n    focusStrategy: focusStrategy,\n    isOpen: isOpen,\n    open: open,\n    close: close,\n    closeAll: closeAll,\n    submenuLevel: submenuLevel,\n    setOpen: () => {},\n    toggle: toggle\n  }), [isOpen, open, close, closeAll, focusStrategy, toggle, submenuLevel]);\n}\nexport { $e5614764aa47eb35$export$cfc51cf86138bf98 as useSubmenuTriggerState };","map":{"version":3,"names":["$e5614764aa47eb35$export$cfc51cf86138bf98","props","state","triggerKey","expandedKeysStack","openSubmenu","closeSubmenu","close","closeAll","submenuLevel","$7exkJ$useState","length","isOpen","$7exkJ$useMemo","focusStrategy","setFocusStrategy","open","$7exkJ$useCallback","toggle","setOpen"],"sources":["/Users/farhang/Desktop/June 17 /Front/Getchup_FrontEnd/node_modules/@react-stately/menu/dist/packages/@react-stately/menu/src/useSubmenuTriggerState.ts"],"sourcesContent":["/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusStrategy, Key} from '@react-types/shared';\nimport type {OverlayTriggerState} from '@react-stately/overlays';\nimport {RootMenuTriggerState} from './useMenuTriggerState';\nimport {useCallback, useMemo, useState} from 'react';\n\nexport interface SubmenuTriggerProps {\n  /** Key of the trigger item. */\n  triggerKey: Key\n}\n\nexport interface SubmenuTriggerState extends OverlayTriggerState {\n  /** Whether the submenu is currently open. */\n  isOpen: boolean,\n  /** Controls which item will be auto focused when the submenu opens. */\n  focusStrategy: FocusStrategy | null,\n  /** Opens the submenu. */\n  open: (focusStrategy?: FocusStrategy | null) => void,\n  /** Closes the submenu. */\n  close: () => void,\n  /** Closes all menus and submenus in the menu tree. */\n  closeAll: () => void,\n  /** The level of the submenu. */\n  submenuLevel: number,\n  /** Toggles the submenu. */\n  toggle: (focusStrategy?: FocusStrategy | null) => void,\n  /** @private */\n  setOpen: () => void\n}\n\n/**\n * Manages state for a submenu trigger. Tracks whether the submenu is currently open, the level of the submenu, and\n * controls which item will receive focus when it opens.\n */\nexport function useSubmenuTriggerState(props: SubmenuTriggerProps, state: RootMenuTriggerState): SubmenuTriggerState  {\n  let {triggerKey} = props;\n  let {expandedKeysStack, openSubmenu, closeSubmenu, close: closeAll} = state;\n  let [submenuLevel] = useState(expandedKeysStack?.length);\n  let isOpen = useMemo(() => expandedKeysStack[submenuLevel] === triggerKey, [expandedKeysStack, triggerKey, submenuLevel]);\n  let [focusStrategy, setFocusStrategy] = useState<FocusStrategy>(null);\n\n  let open = useCallback((focusStrategy: FocusStrategy = null) => {\n    setFocusStrategy(focusStrategy);\n    openSubmenu(triggerKey, submenuLevel);\n  }, [openSubmenu, submenuLevel, triggerKey]);\n\n  let close = useCallback(() => {\n    setFocusStrategy(null);\n    closeSubmenu(triggerKey, submenuLevel);\n  }, [closeSubmenu, submenuLevel, triggerKey]);\n\n  let toggle = useCallback((focusStrategy: FocusStrategy = null) => {\n    setFocusStrategy(focusStrategy);\n    if (isOpen) {\n      close();\n    } else {\n      open(focusStrategy);\n    }\n  }, [close, open, isOpen]);\n\n  return useMemo(() => ({\n    focusStrategy,\n    isOpen,\n    open,\n    close,\n    closeAll,\n    submenuLevel,\n    // TODO: Placeholders that aren't used but give us parity with OverlayTriggerState so we can use this in Popover. Refactor if we update Popover via\n    // https://github.com/adobe/react-spectrum/pull/4976#discussion_r1336472863\n    setOpen: () => {},\n    toggle\n  }), [isOpen, open, close, closeAll, focusStrategy, toggle, submenuLevel]);\n}\n"],"mappings":";AA6CO,SAASA,0CAAuBC,KAA0B,EAAEC,KAA2B;EAC5F,IAAI;IAAAC,UAAA,EAACA;EAAU,CAAC,GAAGF,KAAA;EACnB,IAAI;IAAAG,iBAAA,EAACA,iBAAiB;IAAAC,WAAA,EAAEA,WAAW;IAAAC,YAAA,EAAEA,YAAY;IAAEC,KAAA,EAAOC;EAAQ,CAAC,GAAGN,KAAA;EACtE,IAAI,CAACO,YAAA,CAAa,GAAG,IAAAC,eAAO,EAAEN,iBAAA,aAAAA,iBAAA,uBAAAA,iBAAA,CAAmBO,MAAM;EACvD,IAAIC,MAAA,GAAS,IAAAC,cAAM,EAAE,MAAMT,iBAAiB,CAACK,YAAA,CAAa,KAAKN,UAAA,EAAY,CAACC,iBAAA,EAAmBD,UAAA,EAAYM,YAAA,CAAa;EACxH,IAAI,CAACK,aAAA,EAAeC,gBAAA,CAAiB,GAAG,IAAAL,eAAO,EAAiB;EAEhE,IAAIM,IAAA,GAAO,IAAAC,kBAAU,EAAE,CAACH,aAAA,GAA+B,IAAI;IACzDC,gBAAA,CAAiBD,aAAA;IACjBT,WAAA,CAAYF,UAAA,EAAYM,YAAA;EAC1B,GAAG,CAACJ,WAAA,EAAaI,YAAA,EAAcN,UAAA,CAAW;EAE1C,IAAII,KAAA,GAAQ,IAAAU,kBAAU,EAAE;IACtBF,gBAAA,CAAiB;IACjBT,YAAA,CAAaH,UAAA,EAAYM,YAAA;EAC3B,GAAG,CAACH,YAAA,EAAcG,YAAA,EAAcN,UAAA,CAAW;EAE3C,IAAIe,MAAA,GAAS,IAAAD,kBAAU,EAAE,CAACH,aAAA,GAA+B,IAAI;IAC3DC,gBAAA,CAAiBD,aAAA;IACjB,IAAIF,MAAA,EACFL,KAAA,QAEAS,IAAA,CAAKF,aAAA;EAET,GAAG,CAACP,KAAA,EAAOS,IAAA,EAAMJ,MAAA,CAAO;EAExB,OAAO,IAAAC,cAAM,EAAE,OAAO;mBACpBC,aAAA;YACAF,MAAA;UACAI,IAAA;WACAT,KAAA;cACAC,QAAA;kBACAC,YAAA;IAGAU,OAAA,EAASA,CAAA,MAAO;YAChBD;EACF,IAAI,CAACN,MAAA,EAAQI,IAAA,EAAMT,KAAA,EAAOC,QAAA,EAAUM,aAAA,EAAeI,MAAA,EAAQT,YAAA,CAAa;AAC1E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}